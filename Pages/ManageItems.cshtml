@page
@model LabMaterials.Pages.ManageItemsModel
@section Scripts
{
    <script type="text/javascript" language="javascript">
        const notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            types: [
                {
                    type: 'error',
                    background: '#e3392c',
                    icon: {
                        className: 'fas fa-times',
                        tagName: 'span',
                        color: '#000000'
                    },
                    dismissible: true,
                    duration: 0,
                    ripple: true
                }
            ]
        });

        function showErrorNotification(message) {
            notyf.open({
                type: 'error',
                message: message
            });
        }

        @if (!string.IsNullOrEmpty(Model.Message))
            {
                <text>
                    var errorMessageFromServer = @Html.Raw(Json.Serialize(Model.Message));
                    showErrorNotification(errorMessageFromServer);
                </text>
        }


            function submitForm() {

                var fileInput = document.getElementById("fileInput");
                if (fileInput.files.length > 0) {
                    document.getElementById("import").submit();
                }
            }

            
        const toggleButton = document.getElementById('toggleDropdown');
        const dropdownPanel = document.getElementById('dropdownPanel');

        toggleButton.addEventListener('click', function () {
            dropdownPanel.style.display = (dropdownPanel.style.display === 'none' || dropdownPanel.style.display === '') ? 'block' : 'none';
        });

        // Optional: hide when click outside
        document.addEventListener('click', function (e) {
            if (!toggleButton.contains(e.target) && !dropdownPanel.contains(e.target)) {
                dropdownPanel.style.display = 'none';
            }
        });



    </script>
}
@{

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4">
        <div class="d-block mb-4 mb-md-0">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-transparent p-2 mb-0">
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/home.png" alt="Home" width="16" height="16" class="me-2" />
                        <a href="/Home" class="text-decoration-none">@Model.lblHome</a>
                    </li>
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/inventory.png" alt="Home" width="16" height="16" class="me-2" />
                        @Model.lblItems
                    </li>

                </ol>
            </nav>

            <h2 class="h4">@Model.lblItems</h2>
            <!-- <p class="mb-0">Your web analytics dashboard template.</p>-->
        </div>
        <div class="btn-toolbar mb-2 mb-md-0">
            <a href="AddItem"
                class="btn btn-sm justify-content-center top-sm-btn btn-gray-800 mx-2 d-inline-flex align-items-center">
                <img b-ie9pk9zf1q="" class="icon text-white icon-xs mx-2" src="images/plus.png">
                @Model.lblAddItem
            </a>
            <a href="ManageItemGroups"
                class="btn btn-sm justify-content-center mx-2 top-big-btn btn-outline-gray-600 d-inline-flex align-items-center">
                <img b-ie9pk9zf1q="" class="icon text-white icon-xs mx-2" src="images/manage-b.png">
                @Model.lblManageItemGroup
            </a>
            <a href="ManageUnits"
                class="btn justify-content-center top-btn btn-sm btn-outline-gray-600 d-inline-flex align-items-center mx-2">
                <img b-ie9pk9zf1q="" class="icon text-white icon-xs mx-2 " src="images/manage-b.png">
                @Model.lblManageUnit
            </a>

        </div>
    </div>
    <div class="table-settings mb-4">
        <form method="post" asp-page-handler="Action" class="row align-items-center">

            <div class="row">
                <div class="col col-md-6 col-lg-3 mb-3">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            <svg class="icon icon-xs" x-description="Heroicon name: solid/search"
                                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd"
                                    d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                    clip-rule="evenodd"></path>
                            </svg>
                        </span>
                        <input type="text" name="ItemName" class="form-control" placeholder="@Model.lblItemName" value="@Model.ItemName">
                    </div>
                </div>

                <div class="col col-md-6 col-lg-3 mb-3">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            <svg class="icon icon-xs" x-description="Heroicon name: solid/search"
                                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd"
                                    d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                    clip-rule="evenodd"></path>
                            </svg>
                        </span>
                        <input type="text" name="Group" class="form-control" placeholder="@Model.lblGroupName" value="@Model.Group">
                    </div>
                </div>

                <div class="col col-md-6 col-lg-3 mb-3">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            @Model.lblFromDate
                        </span>
                        <input asp-for="FromDate" class="form-control" type="date" name="FromDate"
                            value="@Model.FromDate?.ToString("yyyy-MM-dd")" />
                    </div>
                </div>

                <div class="col col-md-6 col-lg-3 mb-3 pe-0">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            @Model.lblToDate
                        </span>
                        <input asp-for="ToDate" class="form-control" type="date" name="ToDate"
                            value="@Model.ToDate?.ToString("yyyy-MM-dd")" />
                    </div>
                </div>
            </div>

            <div class="row align-items-center">
                <div class="col-6 col-md-2 ps-md-0 mx-3">
                    <button type="submit" name="action" value="search"class="btn btn-primary">@Model.lblSubmit</button>
                </div>

                <div class="col-6 col-md-3 text-end ms-auto">
                    <div class="position-relative">
                        <button class="btn btn-secondary btn-sm" id="toggleDropdown" type="button">
                            @Model.lblShowHideColumn
                        </button>

                        <div id="dropdownPanel" class="card p-2 shadow-sm position-absolute"
                            style="right: 0; top: 100%; width: 200px; display: none; z-index: 1000;">
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="itemCode"
                                    id="itemCode" @(Model.SelectedColumns.Contains("itemCode") ? "checked" : "")>
                                <label class="form-check-label" for="itemCode">@Model.lblItemCode</label>
                            </div>
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="itemName"
                                    id="itemName" @(Model.SelectedColumns.Contains("itemName") ? "checked" : "")>
                                <label class="form-check-label" for="itemName">@Model.lblItemName</label>
                            </div>
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="quantity"
                                    id="quantity" @(Model.SelectedColumns.Contains("quantity") ? "checked" : "")>
                                <label class="form-check-label" for="quantity">@Model.lblQuantity</label>
                            </div>
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="hazardType"
                                    id="hazardType" @(Model.SelectedColumns.Contains("hazardType") ? "checked" : "")>
                                <label class="form-check-label" for="hazardType">@Model.lblHazardType</label>
                            </div>
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="typeName"
                                    id="typeName" @(Model.SelectedColumns.Contains("typeName") ? "checked" : "")>
                                <label class="form-check-label" for="typeName">@Model.lblTypeName</label>
                            </div>
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="unitCode"
                                    id="unitCode" @(Model.SelectedColumns.Contains("unitCode") ? "checked" : "")>
                                <label class="form-check-label" for="unitCode">@Model.lblUnitCode</label>
                            </div>
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="groupName"
                                    id="groupName" @(Model.SelectedColumns.Contains("groupName") ? "checked" : "")>
                                <label class="form-check-label" for="groupName">@Model.lblGroupName</label>
                            </div>
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="batchNo"
                                    id="batchNo" @(Model.SelectedColumns.Contains("batchNo") ? "checked" : "")>
                                <label class="form-check-label" for="batchNo">@Model.lblBatchNo</label>
                            </div>
                            <div class="form-check mb-1">
                                <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="expiry"
                                    id="expiry" @(Model.SelectedColumns.Contains("expiry") ? "checked" : "")>
                                <label class="form-check-label" for="expiry">@Model.lblExpiryDate</label>
                            </div>
                            <div class="form-check mb-1 text-center">
                                <button type="submit" name="action" value="updateColumns"
                                    class="btn btn-success btn-sm">Ok</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </form>
    </div>
    <div class="d-flex justify-content-end mb-3 align-items-center">



        <div class="d-flex">
            <span class="btn btn-primary btn-file mx-3 top-sm-btn">
                <form method="post" asp-page-handler="Import" id="import" enctype="multipart/form-data">
                    @Model.lblImport<input id="fileInput" type="file" name="file" class="btn btn-primary d-flex "
                        onchange="submitForm()">

                </form>
            </span>
            <form method="post">
                <button type="submit" asp-page-handler="LoadSampleFile"
                    class="btn btn-secondary  top-big-btn">@Model.lblDonwloadSampleFile</button>
            </form>
        </div>

    </div>

    <div class="d-flex align-items-center justify-content-between">
        <div>@Model.lblTotalItem : @Model.TotalItems</div>
        <div>
             @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination">

                @* Previous button *@
                @if (Model.CurrentPage > 1)
                {

                    <li class="page-item">
                        <a class="page-link"
                            href="?page=@(Model.CurrentPage - 1)&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">&laquo;</a>
                    </li>
                }

                @* Show pages normally if the total pages are less than or equal to 10 *@
                @if (Model.TotalPages <= 10)
                {
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                                href="?page=@i&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">@i</a>
                        </li>
                    }
                }
                else
                {
                    @* Show the first page, then ellipsis if there are skipped pages *@
                    @if (Model.CurrentPage > 3)
                    {
                        <li class="page-item">
                            <a class="page-link"
                                href="?page=1&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">1</a>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @* Show pages from (current-1) to (current+1) *@
                    @for (int i = Math.Max(1, Model.CurrentPage - 1); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 1); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                                href="?page=@i&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">@i</a>
                        </li>
                    }

                    @* Add "..." if there are skipped pages after the current page *@
                    @if (Model.CurrentPage < Model.TotalPages - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @* Show the last page, if it's not already visible *@
                    @if (Model.CurrentPage < Model.TotalPages - 2)
                    {
                        <li class="page-item">
                            <a class="page-link"
                                href="?page=@Model.TotalPages&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">@Model.TotalPages</a>
                        </li>
                    }
                }

                @* Last buttons *@
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link"
                            href="?page=@(Model.CurrentPage + 1)&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">&raquo;</a>
                    </li>

                }

            </ul>
        </nav>
    }
        </div>

    </div>


    <div class="card border-0 shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-centered table-nowrap mb-0 rounded">
                    <thead class="thead-light">
                        <tr>
                            @if (Model.SelectedColumns.Contains("itemCode"))
                            {
                            <th scope="col" class="border-0 rounded-start">@Model.lblItemCode</th>
                            }
                            @if (Model.SelectedColumns.Contains("itemName"))
                            {
                            <th scope="col" class="border-0">@Model.lblItemName</th>
                            }
                            @if (Model.SelectedColumns.Contains("quantity"))
                            {
                            <th scope="col" class="border-0">@Model.lblQuantity</th>
                            }
                            @if (Model.SelectedColumns.Contains("hazardType"))
                            {
                            <th scope="col" class="border-0">@Model.lblHazardType</th>
                            }
                            @if (Model.SelectedColumns.Contains("typeName"))
                            {
                            <th scope="col" class="border-0">@Model.lblTypeName</th>
                            }
                            @if (Model.SelectedColumns.Contains("unitCode"))
                            {
                            <th scope="col" class="border-0">@Model.lblUnitCode</th>
                            }
                            @if (Model.SelectedColumns.Contains("groupName"))
                            {
                            <th scope="col" class="border-0">@Model.lblGroupName</th>
                            }
                            @if (Model.SelectedColumns.Contains("batchNo"))
                            {
                            <th scope="col" class="border-0">@Model.lblBatchNo</th>
                            }
                            @if (Model.SelectedColumns.Contains("expiry"))
                            {
                            <th scope="col" class="border-0">@Model.lblExpiryDate</th>
                            }

                            <th class="border-0 rounded-end"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Items != null)
                        {
                            foreach (var item in Model.Items)
                            {
                                <tr>
                                    @if (Model.SelectedColumns.Contains("itemCode"))
                                    {
                                    <th scope="row">@item.ItemCode</th>
                                    }
                                    @if (Model.SelectedColumns.Contains("itemName"))
                                    {
                                    <td>@item.ItemName</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("quantity"))
                                    {
                                    <td>@item.AvailableQuantity</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("hazardType"))
                                    {
                                    <td style='color: @(item.IsHazardous?"red":"teal")'>@item.HazardTypeName</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("typeName"))
                                    {
                                    <td>@item.TypeName</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("unitCode"))
                                    {
                                    <td>@item.UnitCode</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("groupName"))
                                    {
                                    <td>@item.GroupDesc</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("batchNo"))
                                    {
                                    <td>@item.BatchNo</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("expiry"))
                                    {
                                        <td>@(item.ExpiryDate.HasValue ? item.ExpiryDate.Value.ToString("dd-MM/yyyy") : "")</td>
                                    }
                                    <td>
                                        <form method="post">
                                            <input type="hidden" value="@item.ItemId" name="ItemId" />
                                            <input type="hidden" value="@Model.CurrentPage" name="page" />
                                            <input type="hidden" value="@Model.FromDate?.ToString("yyyy-MM-dd")" name="FromDate" />
                                            <input type="hidden" value="@Model.ToDate?.ToString("yyyy-MM-dd")" name="ToDate" />
                                            <input type="submit" value="@Model.lblEdit" class="btn btn-secondary" asp-page-handler="Edit" />
                                            <input type="submit" value="@Model.lblDelete" class="btn btn-danger" asp-page-handler="Delete" />
                                            <!--<input type="submit" value="@Model.lblDamage" class="btn btn-danger" asp-page-handler="Damage" formaction="DamageItem?ItemId=@item.ItemId" /> -->
                                            <a class="btn btn-danger" href="DamageItem?id=@item.ItemId">@Model.lblDamage </a>
                                        </form>
                                    </td>
                                </tr>
                            }
                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @* <div style="color:maroon; text-align:center">@Model.Message</div> *@

   

    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination">

                @* Previous button *@
                @if (Model.CurrentPage > 1)
                {

                    <li class="page-item">
                        <a class="page-link"
                            href="?page=@(Model.CurrentPage - 1)&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">&laquo;</a>
                    </li>
                }

                @* Show pages normally if the total pages are less than or equal to 10 *@
                @if (Model.TotalPages <= 10)
                {
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                                href="?page=@i&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">@i</a>
                        </li>
                    }
                }
                else
                {
                    @* Show the first page, then ellipsis if there are skipped pages *@
                    @if (Model.CurrentPage > 3)
                    {
                        <li class="page-item">
                            <a class="page-link"
                                href="?page=1&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">1</a>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @* Show pages from (current-1) to (current+1) *@
                    @for (int i = Math.Max(1, Model.CurrentPage - 1); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 1); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                                href="?page=@i&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">@i</a>
                        </li>
                    }

                    @* Add "..." if there are skipped pages after the current page *@
                    @if (Model.CurrentPage < Model.TotalPages - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @* Show the last page, if it's not already visible *@
                    @if (Model.CurrentPage < Model.TotalPages - 2)
                    {
                        <li class="page-item">
                            <a class="page-link"
                                href="?page=@Model.TotalPages&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">@Model.TotalPages</a>
                        </li>
                    }
                }

                @* Last buttons *@
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link"
                            href="?page=@(Model.CurrentPage + 1)&ItemName=@Model.ItemName&Group=@Model.Group&FromDate=@Model.FromDate?.ToString("yyyy-MM-dd")&ToDate=@Model.ToDate?.ToString("yyyy-MM-dd")">&raquo;</a>
                    </li>

                }

            </ul>
        </nav>
    }

}




