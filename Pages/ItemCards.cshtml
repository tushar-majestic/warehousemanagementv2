@page
@model LabMaterials.Pages.ItemCardsModel

@{
    ViewData["Title"] = "Create Item Card";
}

<h1>Create Item Card</h1>
<div asp-validation-summary="All" class="text-danger"></div>


<div class="row">
    <div class="col-12 mb-4 m-auto">
        <div class="card border-0 shadow components-section p-3">
            <form method="post">

                @for (int i = 0; i < Model.ItemCardsFromReport.Count; i++)
                {
                    var item = Model.ItemCardsFromReport[i];

                    <div class="card mb-4 p-3 ">
                        <h4>Item @(i + 1)</h4>
                         <input asp-for="@Model.ItemCardsFromReport[i].ItemId" class="form-control" hidden />
                        <div class="d-flex justify-content-between">
                            <div class="form-group w-23">
                                <label>Item Group</label>
                                <input asp-for="@Model.ItemCardsFromReport[i].GroupCode" class="form-control" readonly />
                            </div>
                            <div class="form-group w-23">
                                <label>Item Code</label> <span class="@(Model.IsMajesticUser() ? "majestic" : "text-white")">*</span>
                                <input asp-for="@Model.ItemCardsFromReport[i].ItemCode" class="form-control" readonly />
                            </div>
                        
                            <div class="form-group w-23">
                                <label>Item Name(Arabic)</label> <span class="@(Model.IsMajesticUser() ? "majestic" : "text-white")">*</span>
                                <input asp-for="@Model.ItemCardsFromReport[i].ItemName" class="form-control" readonly />
                            </div>
                            <div class="form-group w-23">
                                <label>Item Name(English)</label> <span class="@(Model.IsMajesticUser() ? "majestic" : "text-white")">*</span>
                                <input asp-for="@Model.ItemCardsFromReport[i].ItemName" class="form-control" readonly />
                            </div>
                            @* <div class="form-group w-23">
                                <label>Item Type Code</label> <span class="@(Model.IsMajesticUser() ? "majestic" : "text-white")">*</span>  
                                <input asp-for="@Model.ItemCardsFromReport[i].ItemTypeCode" class="form-control" readonly />
                            </div> *@
                             <input asp-for="@Model.ItemCardsFromReport[i].ItemTypeCode" class="form-control" type="hidden" />
                        </div>
                    

                        

                        <div class="form-group">
                            <label>Description</label>
                            <textarea asp-for="@Model.ItemCardsFromReport[i].ItemDescription" class="form-control" readonly></textarea>
                        </div>
                        
                        <div class="d-flex justify-content-between">

                        

                            <div class="form-group w-23">
                                <label>Unit of Measure</label>
                                <input asp-for="@Model.ItemCardsFromReport[i].UnitOfmeasure" class="form-control" readonly />
                            </div>

                            <div class="form-group w-23">
                                <label>Chemical</label>
                                <input asp-for="@Model.ItemCardsFromReport[i].Chemical" class="form-control" readonly />
                            </div>

                            <div class="form-group w-23">
                                <label>Risk Rating</label>
                                <input asp-for="@Model.ItemCardsFromReport[i].HazardTypeName" class="form-control" readonly />
                            </div>
                            <div class="form-group w-23">
                                <label>Expiry Date</label>
                                <input type="date" asp-for="@Model.ItemCardsFromReport[i].ExpiryDate" class="form-control"  />
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">

                        

                            <div class="form-group w-23">
                            <label asp-for="@Model.ItemCardsFromReport[i].TypeOfAsset"></label>
                                <select asp-for="@Model.ItemCardsFromReport[i].TypeOfAsset" class="form-control">
                                    <option value="">Select asset type</option>
                                    <option value="Sustainable">Sustainable</option>
                                    <option value="Consumable">Consumable</option>

                                </select>
                            </div>
                            <div class="form-group w-23">
                                <label asp-for="@Model.ItemCardsFromReport[i].Minimum"></label>
                                <input asp-for="@Model.ItemCardsFromReport[i].Minimum"
                                    class="form-control minimum-input"
                                    type="number"
                                    data-index="@i" />
                            </div>

                            <div class="form-group w-23">
                                <label asp-for="@Model.ItemCardsFromReport[i].ReorderLimit">Reorder Limit</label>
                                <input asp-for="@Model.ItemCardsFromReport[i].ReorderLimit"
                                    class="form-control reorder-limit-input"
                                    type="number"
                                    data-index="@i" />
                            </div>

                            <div class="form-group w-23">
                                <label>Ceiling</label>
                                <input class="form-control ceiling-output"
                                    type="number"
                                    readonly
                                    id="ceiling-@i" />
                            </div>

                        </div>
                        <div class="d-flex gap-4">
                        
                            <div class="form-group w-23">
                                <label asp-for="@Model.ItemCardsFromReport[i].QuantityReceived">Quantity Received</label>
                                <input asp-for="@Model.ItemCardsFromReport[i].QuantityReceived" class="form-control" type="number" readonly/>
                                <span asp-validation-for="@Model.ItemCardsFromReport[i].QuantityReceived" class="text-danger"></span>
                            </div>

                        </div>
                    </div>
                }

                <div class="d-flex justify-content-between">
                    <div class="form-group" style="width: 48%;">
                        <label asp-for="ItemCard.StoreId" class="control-label">Warehouse Name</label>
                        @* <input type="text" asp-for="ItemCard.StoreId" class="form-control"/> *@
                        <select asp-for="ItemCard.StoreId" name="StoreId" class="form-control" asp-items="ViewBag.WarehouseId" readonly></select>
                    </div>

                    <div class="form-group" style="width: 48%;">
                        <label asp-for="ItemCardBatch.DateOfEntry"></label>
                        <input asp-for="ItemCardBatch.DateOfEntry" name="DateOfEntry" id="DateOfEntry" class="form-control" type="date" readonly />
                    </div>
                </div>
          
                <div class="d-flex justify-content-between">
                    <div class="form-group" style="width:31%;">
                        <label asp-for="ItemCardBatch.RoomId"></label>
                        <select asp-for="ItemCardBatch.RoomId" class="form-control" asp-items="ViewBag.RoomId" name="RoomId" id="RoomId">
                            <option value="">Select Room</option>

                        </select>
                    </div>

                    <div class="form-group" style="width:31%;">
                        <label asp-for="ItemCardBatch.ShelfId"></label>
                        <select asp-for="ItemCardBatch.ShelfId" name="ShelfId" id="ShelfId" class="form-control" asp-items="ViewBag.ShelfId">
                            <option value="">Select Shelf</option>

                        </select>
                    </div>

                    <div class="form-group" style="width:31%;">
                        <label asp-for="ItemCardBatch.SupplierId"></label>
                        <select asp-for="ItemCardBatch.SupplierId" name="SupplierId" id="SupplierId" class="form-control" asp-items="ViewBag.SupplierId" readonly></select>
                    </div>
                </div>
                <div class="d-flex justify-content-between">
                    <div class="form-group" style="width:48%;">
                        <label asp-for="ItemCardBatch.DocumentType"></label>
                        <input asp-for="ItemCardBatch.DocumentType" name="DocumentType" id="DocumentType" class="form-control" readonly/>
                        
                    </div>  

                    <div class="form-group" style="width:48%;">
                        <label asp-for="ItemCardBatch.ReceiptDocumentnumber"></label>
                        <input asp-for="ItemCardBatch.ReceiptDocumentnumber" name="ReceiptDocumentnumber" id="ReceiptDocumentnumber" class="form-control" readonly />
                    </div>

                </div>

                <button type="submit" class="btn btn-primary">Create</button>
                <a asp-page="./Index" class="btn btn-secondary">Cancel</a>
            </form>
         
        </div>
    </div>
</div>


@* table form *@
@* <div class="row">
    <div class="col-12 mb-4 m-auto">
        <div class="card border-0 shadow components-section p-4">
            <h4 class="mb-3">Item List</h4>
            <table class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>#</th>
                        <th>Item Code</th>
                        <th>Name (AR)</th>
                        <th>Name (EN)</th>
                        <th>Type Code</th>
                        <th>Description</th>
                        <th>Group</th>
                        <th>UOM</th>
                        <th>Chemical</th>
                        <th>Risk</th>
                        <th>Expiry Date</th>
                        <th>Asset Type</th>
                        <th>Min</th>
                        <th>Reorder</th>
                        <th>Ceiling</th>
                        <th>Qty Received</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.ItemCardsFromReport.Count; i++)
                    {
                        var item = Model.ItemCardsFromReport[i];
                        <tr>
                            <td>@(i + 1)</td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].ItemCode" class="form-control" readonly /></td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].ItemName" class="form-control" readonly /></td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].ItemName" class="form-control" readonly /></td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].ItemTypeCode" class="form-control" readonly /></td>
                            <td><textarea asp-for="@Model.ItemCardsFromReport[i].ItemDescription" class="form-control" readonly></textarea></td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].GroupCode" class="form-control" readonly /></td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].UnitOfmeasure" class="form-control" readonly /></td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].Chemical" class="form-control" readonly /></td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].HazardTypeName" class="form-control" readonly /></td>
                            <td><input asp-for="@Model.ItemCardsFromReport[i].ExpiryDate" class="form-control" type="date" readonly /></td>
                            <td>
                                <select asp-for="ItemCardBatch.TypeOfAsset" class="form-control"
                                        asp-items="Html.GetEnumSelectList<LabMaterials.DB.ItemCardBatch.AssetType>()">
                                    <option value="">Select asset type</option>
                                </select>
                            </td>
                            <td>
                                <input asp-for="ItemCardBatch.Minimum" class="form-control" type="number" />
                            </td>
                            <td>
                                <input asp-for="ItemCardBatch.ReorderLimit" class="form-control" type="number" />
                            </td>
                            <td>
                                <input asp-for="ItemCardBatch.Ceiling" class="form-control" type="number" />
                            </td>
                            <td>
                                <input asp-for="ItemCardBatch.QuantityReceived" class="form-control" type="number" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div> *@


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
   @using System.Text.Json

    <script>
        const itemData = @Html.Raw(JsonSerializer.Serialize(Model.AllItemsDto));
        console.log("Loaded item data:", itemData);

        document.getElementById('itemIdSelect').addEventListener('change', function () {
            const selectedCode = this.value;
            console.log("Selected ItemId:", selectedCode);

            const selectedItem = itemData.find(item => item.ItemId == selectedCode);
            console.log("Matched Item:", selectedItem);

            if (selectedItem) {
                document.getElementById('ItemName').value = selectedItem.ItemName || '';
                document.getElementById('UnitOfmeasure').value = selectedItem.UnitOfMeasure || '';
                document.getElementById('ItemDescription').value = selectedItem.ItemDescription || '';

                setSelectValue('ItemCode', selectedItem.ItemCode);
                setSelectValue('GroupCode', selectedItem.GroupCode);
                setSelectValue('ItemTypeCode', selectedItem.ItemTypeCode);
                setSelectValue('HazardTypeName', selectedItem.HazardTypeName);
            }
        });

        function setSelectValue(selectId, value) {
            const select = document.getElementById(selectId);
            if (select) {
                for (let option of select.options) {
                    if (option.value.trim() === value?.toString().trim()) {
                        select.value = option.value;
                        break;
                    }
                }
            }
        }
    </script>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const minInputs = document.querySelectorAll('.minimum-input');
        const reorderInputs = document.querySelectorAll('.reorder-limit-input');

        function calculateCeiling(index) {
            const minVal = parseFloat(document.querySelector(`.minimum-input[data-index='${index}']`).value) || 0;
            const reorderVal = parseFloat(document.querySelector(`.reorder-limit-input[data-index='${index}']`).value) || 0;
            const ceilingInput = document.getElementById(`ceiling-${index}`);
            ceilingInput.value = minVal * reorderVal;
        }

        minInputs.forEach(input => {
            input.addEventListener('input', () => {
                const index = input.getAttribute('data-index');
                calculateCeiling(index);
            });
        });

        reorderInputs.forEach(input => {
            input.addEventListener('input', () => {
                const index = input.getAttribute('data-index');
                calculateCeiling(index);
            });
        });
    });
</script>


}
