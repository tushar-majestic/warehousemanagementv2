@page
@model LabMaterials.Pages.Alerts.IndexModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<body>

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4 pb-2">
        <div class="d-block mb-4 mb-md-0">
            <nav aria-label="breadcrumb"></nav>
                <ol class="breadcrumb bg-transparent p-2 mb-0">
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/home.png" alt="Home" width="16" height="16" class="me-2" />
                        <a href="/Home" class="text-decoration-none">@Model.lblHome</a>
                    </li>
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/management.png" alt="Home" width="16" height="16" class="me-2" />
                        Alerts
                    </li>
                </ol>
            </nav>
            <h2 class="h4">Alerts</h2>
            <!-- <p class="mb-0">Your web analytics dashboard template.</p>-->
        </div>
        <div class="btn-toolbar mb-2 mb-md-0" id="sectionn-buttons">
            <div class="btn-group ms-2 ms-lg-3">
                <button id="btn-minimum"
                    class="btn justify-content-center top-big-btn btn-gray-600 d-inline-flex align-items-center"
                    onclick="setActiveButton('minimum')">Minimum</button>
            </div>
            <div class="btn-group ms-2 ms-lg-3">
                <button id="btn-maximum"
                    class="btn justify-content-center top-big-btn btn-outline-gray-600 d-inline-flex align-items-center"
                    onclick="setActiveButton('maximum')">Maximum</button>
            </div>
            <div class="btn-group ms-2 ms-lg-3">
                <button id="btn-reorder"
                    class="btn justify-content-center top-big-btn btn-outline-gray-600 d-inline-flex align-items-center"
                    onclick="setActiveButton('reorder')">Re-order</button>
            </div>
        </div>
    </div>


    <div class="card border-0 shadow mb-4">
        <div class="card-body">
            <div id="sectionn-minimum" class="sectionn table-responsive mb-3">
                <h3>Items Less Than Minimum</h3> 
                <table class="table table-centered table-nowrap mb-0 rounded">
                    <thead class="thead-light">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].ItemCode)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].ItemName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].ItemDescription)
                            </th>
                        
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].QuantityAvailable)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].CreatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].LastActivity)
                            </th>
                        
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].Minimum)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].ReorderLimit)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].Ceiling)
                            </th>
                    
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardminimum[0].Store)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemCardminimum)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemDescription)
                                </td>
                            
                                <td>
                                    @Html.DisplayFor(modelItem => item.QuantityAvailable)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastActivity)
                            
                                <td>
                                    @Html.DisplayFor(modelItem => item.Minimum)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReorderLimit)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Ceiling)
                                </td>
                            
                                <td>
                                    @Html.DisplayFor(modelItem => item.Store.StoreId)
                                </td>
                                <td>
                                    @* <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> | *@
                                    @* <a asp-page="./Details" asp-route-id="@item.Id">Details</a> | *@
                                    @* <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> *@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div id="sectionn-maximum" class="sectionn d-none table-responsive mb-3">
                <h3>Items With Maximum Quantity</h3>
                <table class="table table-centered table-nowrap mb-0 rounded">
                    <thead class="thead-light">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].ItemCode)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].ItemName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].ItemDescription)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].QuantityAvailable)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].CreatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].LastActivity)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].Minimum)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].ReorderLimit)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].Ceiling)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardCeiling[0].Store)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemCardCeiling)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemDescription)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.QuantityAvailable)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastActivity)

                                <td>
                                        @Html.DisplayFor(modelItem => item.Minimum)
                                </td>
                                <td>
                                        @Html.DisplayFor(modelItem => item.ReorderLimit)
                                </td>
                                <td>
                                        @Html.DisplayFor(modelItem => item.Ceiling)
                                </td>

                                <td>
                                        @Html.DisplayFor(modelItem => item.Store.StoreId)
                                </td>
                                <td>
                                    @* <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> | *@
                                    @* <a asp-page="./Details" asp-route-id="@item.Id">Details</a> | *@
                                    @* <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> *@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        <!-- Orders sectionn -->

            <div id="sectionn-reorder" class="sectionn d-none table-responsive mb-3">
                <h3>Items Reaching Re-Order Limit</h3>
                <table class="table table-centered table-nowrap mb-0 rounded">
                    <thead class="thead-light">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].ItemCode)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].ItemName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].ItemDescription)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].QuantityAvailable)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].CreatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].LastActivity)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].Minimum)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].ReorderLimit)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].Ceiling)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.ItemCardReorder[0].Store)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemCardReorder)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemDescription)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.QuantityAvailable)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastActivity)

                                <td>
                                        @Html.DisplayFor(modelItem => item.Minimum)
                                </td>
                                <td>
                                        @Html.DisplayFor(modelItem => item.ReorderLimit)
                                </td>
                                <td>
                                        @Html.DisplayFor(modelItem => item.Ceiling)
                                </td>

                                <td>
                                        @Html.DisplayFor(modelItem => item.Store.StoreId)
                                </td>
                                <td>
                                    @* <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> | *@
                                    @* <a asp-page="./Details" class="btn btn-primary" asp-route-id="@item.Id">Details</a> | *@
                                    @* <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> *@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>

    @* <div class="card border-0 shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-centered table-nowrap mb-0 rounded">
                    <thead class="thead-light">
                        <tr>
                            <th>lblID</th>
                            <th>PrivilegeName</th>
                            <th >lblActions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>PrivilegeId</td>
                            <td>PrivilegeName</td>
                            <td>Cancel</td>
                        </tr> 
                    </tbody>
                </table>
            </div>
        </div>
    </div> *@

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>

        function showsectionn(sectionn) {
            document.querySelectorAll('.sectionn').forEach(div => div.classList.add('d-none'));
            const target = document.getElementById('sectionn-' + sectionn);
            if (target) {
                target.classList.remove('d-none');
                target.scrollIntoView({ behavior: 'smooth' });
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Detect sectionn from hash in URL
            const hash = window.location.hash;
            if (hash && hash.startsWith('#sectionn-')) {
                const sectionn = hash.replace('#sectionn-', '');
                showSection(sectionn);
            } else {
                // Default to 'minimum' if no hash
                showSection('minimum');
            }

            // Row selection
            document.querySelectorAll('.selectable-table').forEach(table => {
                table.querySelectorAll('tbody tr').forEach(row => {
                    row.addEventListener('click', () => {
                        table.querySelectorAll('tr').forEach(r => r.classList.remove('selected'));
                        row.classList.add('selected');
                    });
                });
            });
        });
    </script>
    <script>
    function setActiveButton(sectionn) {
        // Remove active style from all buttons
        document.querySelectorAll('#sectionn-buttons button').forEach(btn => {
            btn.classList.remove('btn-gray-600');
            btn.classList.add('btn-outline-gray-600');
        });

        // Set active style on the clicked one
        const activeBtn = document.getElementById(`btn-${sectionn}`);
        if (activeBtn) {
            activeBtn.classList.remove('btn-outline-gray-600');
            activeBtn.classList.add('btn-gray-600');
        }

        // Call sectionn display logic
        showsectionn(sectionn);
    }
</script>
</body>


