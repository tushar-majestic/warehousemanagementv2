@page
@model LabMaterials.Pages.EditReturnRequestModel

@{
    ViewData["Title"] = "Create Return Request";
}
 
<div class="py-4">

    <div class="d-flex justify-content-between w-100 flex-wrap">
        <div class="mb-3 mb-lg-0">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-transparent p-2 mb-0">
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/home.png" alt="Home" width="16" height="16" class="me-2" />
                        <a href="/Home" class="text-decoration-none">@Model.lblHome</a>
                    </li>
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/inventory.png" alt="Home" width="16" height="16" class="me-2" />
                            <a href="/ViewReturnRequests" class="text-decoration-none">@Model.lblDamagedItems</a>
                    </li>
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/inventory.png" alt="Home" width="16" height="16" class="me-2" />
                        Edit Return Request
                    </li>
                </ol>
            </nav>
            @if(Model.UserGroupName == "Return Inspection Committee Officer"){
                <h1 class="h4">Add Committee Recommendations</h1>
            }
            else if(Model.UserGroupName == "Recycling Officer"){
              <h1 class="h4">Add Recycling Notes to Recycling Items</h1>
            }
            else{
                <h1 class="h4">Edit Return Request</h1>
            }
            
        </div>
    </div>
</div>
       @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            ModelState is invalid. Errors:
            <ul>
                @foreach (var modelState in ViewData.ModelState)
                {
                    foreach (var error in modelState.Value.Errors)
                    {
                        <li>@modelState.Key: @error.ErrorMessage</li>
                    }
                }
            </ul>
        </div>
    }
<div class="row">
        <div class="col-8 mb-4 m-auto">
            @if(Model.UserId == Model.Report.CreatedBy){
               <div class="card border-0 shadow components-section">
                    <form method="post" class="card-body">
                        <div id="returnEntriesWrapper">
                            @for (int i = 0; i < Model.ReturnItems.Count; i++)
                            {
                                <div class="return-entry border p-3 mb-3 rounded">
                                    <div class="row">
                                        @* <div class="col-md-6 mb-4">
                                            <label>Item Group</label>
                                            @{
                                                var itemgroup = Model.ItemGroups.FirstOrDefault(g => g.GroupCode == Model.ReturnItems[@i].ItemGroup);
                                            }
                                            <input type="text" class="form-control" value="@itemgroup.GroupDesc" />
                                            
                                        </div> *@
                                        <div class="col-md-6 mb-4">
                                            <label>Item Group</label>
                                            <select class="form-select item-group-select" name="ReturnItems[@i].itemGroup" asp-for="ReturnItems[@i].ItemGroup" id="itemGroup_@i" onchange="filterItemsByGroup(@i)">
                                                <option value="">Select Group</option>
                                                @foreach (var group in Model.ItemGroups)
                                                {
                                                    <option value="@group.GroupCode">@group.GroupDesc</option>
                                                }
                                            </select>
                                        </div>
                                        <input type="hidden" name="ReturnItems[@i].Id" value="@Model.ReturnItems[@i].Id" asp-for="ReturnItems[@i].Id"/>
                                        <div class="col-md-6 mb-4">
                                            <label>Arabic Item Name</label>
                                            <select class="form-select ArabicItemName" name="ReturnItems[@i].ItemCardId"  asp-for="@Model.ReturnItems[@i].ItemCardId" 
                                                    onchange="onItemChange(this, @i)">
                                                <option value="">Select Item</option>
                                                @foreach (var item in Model.ItemCards)
                                                {   
                                                    var Item = Model.AllItems.FirstOrDefault(i => i.ItemId == item.ItemId);
                                                    <option value="@item.Id"
                                                            data-code="@item.ItemCode"
                                                            data-description="@item.ItemDescription"
                                                            data-chemical="@item.Chemical"
                                                            data-risk="@item.HazardTypeName"
                                                            data-unit="@item.UnitOfmeasure"
                                                            data-itemnamearabic="@item.ItemName"
                                                            data-itemnameenglish="@item.ItemName"
                                                            data-expdate = "@Item.ExpiryDate?.ToString("yyyy-MM-dd")">
                                                        @item.ItemName
                                                    </option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Item Code</label>
                                            <input type="text" name="ReturnItems[@i].ItemCode" class="form-control ItemCode" value="@Model.ReturnItems[@i].ItemCode"  />
                                        </div>


                                        <input hidden type="text" name="ReturnItems[@i].ItemNameArabic" class="form-control ItemNameArabic"  />



                                        <input hidden type="text" name="ReturnItems[@i].ItemNameEnglish" class="form-control ItemNameEnglish"  />
                                        
                                        <div class="col-md-6 mb-4">
                                            <label>Item Description</label>
                                            <input type="text" name="ReturnItems[@i].ItemDescription" class="form-control ItemDescription"  value="@Model.ReturnItems[@i].ItemDescription"  />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Chemical</label>
                                            <input type="text" name="ReturnItems[@i].Chemical" class="form-control chemical" value="@Model.ReturnItems[@i].Chemical"  />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Risk Rating</label>
                                            <input type="text" name="ReturnItems[@i].RiskRating" value="@Model.ReturnItems[@i].RiskRating" class="form-control RiskRating"  />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>State of Matter</label>
                                            <input type="text"  name="ReturnItems[@i].StateOfMatter" class="form-select" value="@Model.ReturnItems[@i].StateOfMatter" />
                                            
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Expiry Date</label>
                                            <input type="date" name="ReturnItems[@i].ExpiryDate"  value="@Model.ReturnItems[@i].ExpiryDate?.ToString("yyyy-MM-dd")" class="form-control ExpDate"   />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Unit of Measure</label>
                                            <input type="text" name="ReturnItems[@i].UnitOfMeasure" value="@Model.ReturnItems[@i].UnitOfMeasure" class="form-control UnitofMeasure"  />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Return Quantity</label>
                                            <input type="number" name="ReturnItems[@i].ReturnedQuantity" value="@Model.ReturnItems[@i].ReturnedQuantity" class="form-control"  />
                                        </div>
                                        <div class="col-12 mb-4">
                                            <label>Return Notes</label>
                                            <textarea name="ReturnItems[@i].ReturnNotes" value="@Model.ReturnItems[@i].ReturnNotes" class="form-control" rows="2" > @Model.ReturnItems[@i].ReturnNotes</textarea>
                                        </div>

                                        
                                    </div>
                                </div>
                            }
                        </div>
                        <button type="button" class="btn btn-secondary mb-3" id="addEntryBtn" >Add More Items</button>

                        
                        <div class="mb-4">
                            <label>Order Date</label>
                            <input type="date" name="OrderDate" class="form-control" value="@Model.Report.OrderDate.ToString("yyyy-MM-dd")" />
                        </div>

                        @* <div class="mb-4">
                            <label>Requesting Sector</label>
                            <input type="text" name="RequestingSector" class="form-control" value="@Model.Report.ToSector" />
                        </div> *@

                       

                        <div class="mb-4">
                            <p><b>Requesting Sector</b>: @Model.Report.ToSector</p>                        
                        </div>

                        <div class="mb-4">
                            @{
                                var applicantSector = Model.requesters.FirstOrDefault(r=> r.ReqId == Model.Report.FromSectorId);
                            }
                            <p><b>Applicant's Sector</b>: @applicantSector.DestinationName</p>                        

                        </div>
                        <div class="mb-4">
                            @{
                                var store = Model.Stores.FirstOrDefault(s=> s.StoreId == Model.Report.WarehouseId);
                            }
                            <p><b>Store</b>: @store.StoreName</p>                        
                        
                        </div>
                        <div class="mb-4">
                            <label>Reason for Return</label><br />
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="ReasonForReturn" value="SurPlus"   @(Model.Report.IsSurplus ? "checked" : "")/>
                                <label class="form-check-label">Surplus</label>
                            </div>
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="ReasonForReturn" value="Expired" @(Model.Report.IsExpired ? "checked" : "")/>
                                <label class="form-check-label">Expired</label>
                            </div>
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="ReasonForReturn" value="Invalid" @(Model.Report.IsInvalid ? "checked" : "") />
                                <label class="form-check-label">Invalid</label>
                            </div>
                            <div class="form-check">
                                <input type="radio" class="form-check-input" name="ReasonForReturn" value="Damaged" @(Model.Report.IsDamaged ? "checked" : "")/>
                                <label class="form-check-label">Damaged</label>
                            </div>
                        </div>
                        @* <div class="mb-4">
                            <p><b>Reason for Return</b>: @Model.Report.Reason</p>
                        </div> *@
                        <div class="d-flex gap-3">
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </form>

                </div>  
            }
            @if(Model.UserGroupName == "Return Inspection Committee Officer")                       {
                <div class="card border-0 shadow components-section">
                    <form method="post" class="card-body">
                        
                            @for (int i = 0; i < Model.ReturnItems.Count; i++)
                            {
                                <div class="border p-3 mb-3 rounded">
                                    <div class="row">
                                        <div class="col-md-6 mb-4">
                                            <label>Item Group</label>
                                            @{
                                                var itemgroup = Model.ItemGroups.FirstOrDefault(g => g.GroupCode == Model.ReturnItems[@i].ItemGroup);
                                            }
                                            <input type="text" class="form-control" value="@itemgroup.GroupDesc" readonly/>
                                            
                                        </div>
                                        <input type="hidden" name="ReturnItems[@i].Id" value="@Model.ReturnItems[@i].Id" asp-for="ReturnItems[@i].Id"/>
                                        <div class="col-md-6 mb-4">
                                            <label>Arabic Item Name</label>
                                            <select class="form-select ArabicItemName" name="ReturnItems[@i].ItemCardId"  asp-for="@Model.ReturnItems[@i].ItemCardId" disabled
                                                    onchange="onItemChange(this, @i)">
                                                <option value="">Select Item</option>
                                                @foreach (var item in Model.ItemCards)
                                                {   
                                                    var Item = Model.AllItems.FirstOrDefault(i => i.ItemId == item.ItemId);
                                                    <option value="@item.Id"
                                                            data-code="@item.ItemCode"
                                                            data-description="@item.ItemDescription"
                                                            data-chemical="@item.Chemical"
                                                            data-risk="@item.HazardTypeName"
                                                            data-unit="@item.UnitOfmeasure"
                                                            data-itemnamearabic="@item.ItemName"
                                                            data-itemnameenglish="@item.ItemName"
                                                            data-expdate = "@Item.ExpiryDate?.ToString("yyyy-MM-dd")">
                                                        @item.ItemName
                                                    </option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Item Code</label>
                                            <input type="text" name="ReturnItems[@i].ItemCode" class="form-control ItemCode" value="@Model.ReturnItems[@i].ItemCode" readonly />
                                        </div>


                                        <input hidden type="text" name="ReturnItems[@i].ItemNameArabic" class="form-control ItemNameArabic" readonly />



                                        <input hidden type="text" name="ReturnItems[@i].ItemNameEnglish" class="form-control ItemNameEnglish" readonly />
                                        
                                        <div class="col-md-6 mb-4">
                                            <label>Item Description</label>
                                            <input type="text" name="ReturnItems[@i].ItemDescription" class="form-control ItemDescription"  value="@Model.ReturnItems[@i].ItemDescription" readonly />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Chemical</label>
                                            <input type="text" name="ReturnItems[@i].Chemical" class="form-control chemical" value="@Model.ReturnItems[@i].Chemical" readonly />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Risk Rating</label>
                                            <input type="text" name="ReturnItems[@i].RiskRating" value="@Model.ReturnItems[@i].RiskRating" class="form-control RiskRating" readonly />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>State of Matter</label>
                                            <input type="text"  name="ReturnItems[@i].StateOfMatter" class="form-select" value="@Model.ReturnItems[@i].StateOfMatter" disabled/>
                                            
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Expiry Date</label>
                                            <input type="date" name="ReturnItems[@i].ExpiryDate"  value="@Model.ReturnItems[@i].ExpiryDate?.ToString("yyyy-MM-dd")" class="form-control ExpDate" readonly  />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Unit of Measure</label>
                                            <input type="text" name="ReturnItems[@i].UnitOfMeasure" value="@Model.ReturnItems[@i].UnitOfMeasure" class="form-control UnitofMeasure" readonly />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Return Quantity</label>
                                            <input type="number" name="ReturnItems[@i].ReturnedQuantity" value="@Model.ReturnItems[@i].ReturnedQuantity" class="form-control" readonly />
                                        </div>
                                        <div class="col-12 mb-4">
                                            <label>Return Notes</label>
                                            <textarea name="ReturnItems[@i].ReturnNotes" value="@Model.ReturnItems[@i].ReturnNotes" class="form-control" rows="2" readonly> @Model.ReturnItems[@i].ReturnNotes</textarea>
                                        </div>

                                    
                                        <div class="mb-4">
                                            <label>Recommended Action</label>
                                            <select name="ReturnItems[@i].RecommendedAction" class="form-control" asp-for="ReturnItems[@i].RecommendedAction"  required>
                                                <option value="">Select Recommended Action</option>
                                                @foreach (var condition in Enum.GetValues(typeof(LabMaterials.DB.ReturnRequestItem.ItemCondition)))
                                                {
                                                    var selected = Model.ReturnItems[@i].RecommendedAction == (LabMaterials.DB.ReturnRequestItem.ItemCondition)condition ? "selected" : "";
                                                    <option value="@condition" >@condition</option>
                                                }
                                            </select>
                                        </div>

                                        <div class="mb-4">
                                            <label>Additional Notes</label>
                                            <textarea name="ReturnItems[@i].Notes" asp-for="ReturnItems[@i].Notes"  class="form-control" rows="2" required></textarea>
                                        </div>
                                        
                                    </div>
                                </div>
                            }
                        

                        
                    
                        <div class="mb-4">
                            <p><b>Order Date</b>: @Model.Report.OrderDate</p>
                        </div>
                        <div class="mb-4">
                            <p><b>Requesting Sector</b>: @Model.Report.ToSector</p>                        
                        </div>

                        <div class="mb-4">
                            @{
                                var applicantSector = Model.requesters.FirstOrDefault(r=> r.ReqId == Model.Report.FromSectorId);
                            }
                            <p><b>Applicant's Sector</b>: @applicantSector.DestinationName</p>                        

                        </div>
                        <div class="mb-4">
                            @{
                                var store = Model.Stores.FirstOrDefault(s=> s.StoreId == Model.Report.WarehouseId);
                            }
                            <p><b>Store</b>: @store.StoreName</p>                        
                        
                        </div>
                        <div class="mb-4">
                            <p><b>Reason for Return</b>: @Model.Report.Reason</p>
                        </div>
                        <div class="d-flex gap-3">
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </form>

                </div>
            }
            else if(Model.UserGroupName == "Recycling Officer"){
                <div class="card border-0 shadow components-section">
                    <form method="post" class="card-body">
                        
                            @for (int i = 0; i < Model.ReturnItems.Count; i++)
                            {
                                <div class="border p-3 mb-3 rounded">
                                    <div class="row">
                                        <div class="col-md-6 mb-4">
                                            <label>Item Group</label>
                                            @{
                                                var itemgroup = Model.ItemGroups.FirstOrDefault(g => g.GroupCode == Model.ReturnItems[@i].ItemGroup);
                                            }
                                            <input type="text" class="form-control" value="@itemgroup.GroupDesc" readonly/>
                                            
                                        </div>
                                        <input type="hidden" name="ReturnItems[@i].Id" value="@Model.ReturnItems[@i].Id" asp-for="ReturnItems[@i].Id"/>
                                        <div class="col-md-6 mb-4">
                                            <label>Arabic Item Name</label>
                                            <select class="form-select ArabicItemName" name="ReturnItems[@i].ItemCardId"  asp-for="@Model.ReturnItems[@i].ItemCardId" disabled
                                                    onchange="onItemChange(this, @i)">
                                                <option value="">Select Item</option>
                                                @foreach (var item in Model.ItemCards)
                                                {   
                                                    var Item = Model.AllItems.FirstOrDefault(i => i.ItemId == item.ItemId);
                                                    <option value="@item.Id"
                                                            data-code="@item.ItemCode"
                                                            data-description="@item.ItemDescription"
                                                            data-chemical="@item.Chemical"
                                                            data-risk="@item.HazardTypeName"
                                                            data-unit="@item.UnitOfmeasure"
                                                            data-itemnamearabic="@item.ItemName"
                                                            data-itemnameenglish="@item.ItemName"
                                                            data-expdate = "@Item.ExpiryDate?.ToString("yyyy-MM-dd")">
                                                        @item.ItemName
                                                    </option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Item Code</label>
                                            <input type="text" name="ReturnItems[@i].ItemCode" class="form-control ItemCode" value="@Model.ReturnItems[@i].ItemCode" readonly />
                                        </div>


                                        <input hidden type="text" name="ReturnItems[@i].ItemNameArabic" class="form-control ItemNameArabic" readonly />



                                        <input hidden type="text" name="ReturnItems[@i].ItemNameEnglish" class="form-control ItemNameEnglish" readonly />
                                        
                                        <div class="col-md-6 mb-4">
                                            <label>Item Description</label>
                                            <input type="text" name="ReturnItems[@i].ItemDescription" class="form-control ItemDescription"  value="@Model.ReturnItems[@i].ItemDescription" readonly />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Chemical</label>
                                            <input type="text" name="ReturnItems[@i].Chemical" class="form-control chemical" value="@Model.ReturnItems[@i].Chemical" readonly />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Risk Rating</label>
                                            <input type="text" name="ReturnItems[@i].RiskRating" value="@Model.ReturnItems[@i].RiskRating" class="form-control RiskRating" readonly />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>State of Matter</label>
                                            <input type="text"  name="ReturnItems[@i].StateOfMatter" class="form-select" value="@Model.ReturnItems[@i].StateOfMatter" disabled/>
                                            
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Expiry Date</label>
                                            <input type="date" name="ReturnItems[@i].ExpiryDate"  value="@Model.ReturnItems[@i].ExpiryDate?.ToString("yyyy-MM-dd")" class="form-control ExpDate" readonly  />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Unit of Measure</label>
                                            <input type="text" name="ReturnItems[@i].UnitOfMeasure" value="@Model.ReturnItems[@i].UnitOfMeasure" class="form-control UnitofMeasure" readonly />
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label>Return Quantity</label>
                                            <input type="number" name="ReturnItems[@i].ReturnedQuantity" value="@Model.ReturnItems[@i].ReturnedQuantity" class="form-control" readonly />
                                        </div>
                                        <div class="col-12 mb-4">
                                            <label>Return Notes</label>
                                            <textarea name="ReturnItems[@i].ReturnNotes" value="@Model.ReturnItems[@i].ReturnNotes" class="form-control" rows="2" readonly> @Model.ReturnItems[@i].ReturnNotes</textarea>
                                        </div>

                                    
                                        <div class="mb-4">
                                            <label>Recommended Action</label>
                                            <input class="form-control" name="ReturnItems[@i].RecommendedAction" value="@Model.ReturnItems[@i].RecommendedAction" type="text" readonly/>
                                        </div>
                                        <div class="mb-4">
                                            <label>Additional Notes</label>
                                            <textarea name="ReturnItems[@i].Notes"    class="form-control" rows="2" readonly> @Model.ReturnItems[@i].Notes</textarea>
                                        </div> 

                                        @if(Model.ReturnItems[@i].RecommendedAction == LabMaterials.DB.ReturnRequestItem.ItemCondition.Recyclable){
                                            <div class="mb-4">
                                                <label>Recycling Notes</label>
                                                <textarea name="ReturnItems[@i].RecyclingNotes" asp-for="ReturnItems[@i].RecyclingNotes"  class="form-control" rows="2" required></textarea>
                                            </div>
                                        }
                                        
                                        
                                    </div>
                                </div>
                            }
                        

                        
                    
                        <div class="mb-4">
                            <p><b>Order Date</b>: @Model.Report.OrderDate</p>
                        </div>
                        <div class="mb-4">
                            <p><b>Requesting Sector</b>: @Model.Report.ToSector</p>                        
                        </div>

                        <div class="mb-4">
                            @{
                                var applicantSector = Model.requesters.FirstOrDefault(r=> r.ReqId == Model.Report.FromSectorId);
                            }
                            <p><b>Applicant's Sector</b>: @applicantSector.DestinationName</p>                        

                        </div>
                        <div class="mb-4">
                            @{
                                var store = Model.Stores.FirstOrDefault(s=> s.StoreId == Model.Report.WarehouseId);
                            }
                            <p><b>Store</b>: @store.StoreName</p>                        
                        
                        </div>
                        <div class="mb-4">
                            <p><b>Reason for Return</b>: @Model.Report.Reason</p>
                        </div>
                        <div class="d-flex gap-3">
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </form>

                </div>
            }
        </div>
</div>

@section Scripts {
    <script>

        // Notyf notification for errors
        const notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            types: [
                {
                    type: 'error',
                    background: '#e3392c',
                    icon: {
                        className: 'fas fa-times',
                        tagName: 'span',
                        color: '#000000'
                    },
                    dismissible: true,
                    duration: 0,
                    ripple: true
                }
            ]
        });

        function showErrorNotification(message) {
            notyf.open({
                type: 'error',
                message: message
            });
        }

        @if (!string.IsNullOrEmpty(Model.ErrorMsg))
        {
            <text>
                var errorMessageFromServer = @Html.Raw(Json.Serialize(Model.ErrorMsg));
                showErrorNotification(errorMessageFromServer);
            </text>
        }


        let entryIndex = @Model.ReturnItems.Count;

        function onItemChange(select, index) {
            const selected = select.options[select.selectedIndex];
            document.querySelectorAll(".ItemCode")[index].value = selected.dataset.code || "";
            document.querySelectorAll(".ItemDescription")[index].value = selected.dataset.description || "";
            document.querySelectorAll(".chemical")[index].value = selected.dataset.chemical || "";
            document.querySelectorAll(".RiskRating")[index].value = selected.dataset.risk || "";
            document.querySelectorAll(".UnitofMeasure")[index].value = selected.dataset.unit || "";
            document.querySelectorAll(".ItemNameArabic")[index].value = selected.dataset.itemnamearabic || "";
            document.querySelectorAll(".ItemNameEnglish")[index].value = selected.dataset.itemnameenglish || "";
            document.querySelectorAll(".ExpDate")[index].value = selected.dataset.expdate || "";

            // Check for duplicates
            const selectedValue = select.value;
            let duplicates = 0;
            document.querySelectorAll(".ArabicItemName").forEach((el) => {
                if (el.value === selectedValue) {
                    duplicates++;
                }
            });
            if (duplicates > 1) {
                alert("This item has already been selected in another entry.");
                select.value = ""; // Reset
            }
        }

          document.getElementById("addEntryBtn").addEventListener("click", function () {
             const addButton = document.getElementById('addEntryBtn');
            addButton.disabled = true;
            console.log('addEntryBtn')
            const wrapper = document.getElementById("returnEntriesWrapper");
            const firstEntry = wrapper.querySelector(".return-entry");
            const newEntry = firstEntry.cloneNode(true);
            
         

            newEntry.querySelectorAll("input, select, textarea").forEach((el) => {
                if (el.name) {
                    el.name = el.name.replace(/\[\d+\]/, `[${entryIndex}]`);
                }
                if (el.id) {
                    el.id = el.id.replace(/_\d+/, `_${entryIndex}`);
                }

                if (el.type !== "hidden") {
                    el.value = "";
                }

                if (el.tagName.toLowerCase() === "select") {
                    el.selectedIndex = 0;
                }
            });
            const currentIndex = entryIndex;
            const itemSelect = newEntry.querySelector(".ArabicItemName");

            const itemSelectGroup = newEntry.querySelector(".item-group-select");
             if (itemSelectGroup) {
                 itemSelectGroup.removeAttribute("onchange");
                itemSelectGroup.addEventListener("change", function () {
                    filterItemsByGroup(currentIndex);
                });

            }
            itemSelect.setAttribute("onchange", `onItemChange(this, ${entryIndex})`);

       
             const removeBtn = document.createElement("button");
                removeBtn.type = "button";
                removeBtn.className = "btn btn-danger remove-entry mt-2";
                removeBtn.innerText = "Remove";
                removeBtn.addEventListener("click", function () {
                    newEntry.remove();
                       const addButton = document.getElementById('addEntryBtn');
                        addButton.disabled = false;
                });

              newEntry.insertBefore(removeBtn, newEntry.firstChild);

            wrapper.appendChild(newEntry);
            
            entryIndex++;
          
        });

        // Initial remove buttons setup
        document.querySelectorAll(".remove-entry").forEach(btn => {
            btn.addEventListener("click", function () {
                btn.closest(".return-entry").remove();
            });
        });
    </script>
}

