@page
@model LabMaterials.Pages.DamageItemModel
@section Scripts
{
    <script type="text/javascript" language="javascript">
        const notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            types: [
                {
                    type: 'error',
                    background: '#e3392c',
                    icon: {
                        className: 'fas fa-times',
                        tagName: 'span',
                        color: '#000000'
                    },
                    dismissible: true,
                    duration: 0,
                    ripple: true
                }
            ]
        });

        function showErrorNotification(message) {
            notyf.open({
                type: 'error',
                message: message
            });
        }

        @if (!string.IsNullOrEmpty(Model.ErrorMsg))
        {
            <text>
                var errorMessageFromServer = @Html.Raw(Json.Serialize(Model.ErrorMsg));
                showErrorNotification(errorMessageFromServer);
            </text>
        }
    </script>
    <script>
        let entryIndex = 1;

        document.getElementById("addEntryBtn").addEventListener("click", function () {
            let wrapper = document.getElementById("returnEntriesWrapper");
            let firstEntry = wrapper.querySelector(".return-entry");
            let newEntry = firstEntry.cloneNode(true);

            // Update radio button names to make them unique
            newEntry.querySelectorAll('input[type="radio"]').forEach(function (input) {
                let newName = `ReasonForReturn_${entryIndex}`;
                input.name = newName;
                input.checked = false;
            });

            // Clear all input/select/textarea values
            newEntry.querySelectorAll("input, select, textarea").forEach(function (input) {
                if (input.type !== "radio" && input.type !== "checkbox") input.value = "";
            });

            wrapper.appendChild(newEntry);
            initializeEntry(newEntry);
            entryIndex++;
        });

        // Remove button handler using event delegation
        document.getElementById("returnEntriesWrapper").addEventListener("click", function (e) {
            if (e.target.classList.contains("remove-entry")) {
                let allEntries = document.querySelectorAll(".return-entry");
                if (allEntries.length > 1) {
                    e.target.closest(".return-entry").remove();
                } else {
                    showErrorNotification("At least one Item is required.");
                }
            }
        });

        
    // --- Handle Select Change ---
    function handleChange(e) {
        const entry = e.target.closest(".return-entry");
        const sourceSelect = e.target;
        const selectedOption = sourceSelect.options[sourceSelect.selectedIndex];
        if (!selectedOption) return;

        const selectedId = selectedOption.dataset.id;
        const targetSelect = entry.querySelector(
            sourceSelect.classList.contains("ArabicItemName") ? ".EnglishArabicName" : ".ArabicItemName"
        );

        for (const option of targetSelect.options) {
            if (option.dataset.id === selectedId) {
                targetSelect.value = option.value;
                break;
            }
        }

        // Populate fields
        entry.querySelector(".ItemCode").value = selectedOption.dataset.code || "";
        entry.querySelector(".ItemDescription").value = selectedOption.dataset.description || "";
        entry.querySelector(".typeofAsset").value = selectedOption.dataset.asset || "";
        entry.querySelector(".chemical").value = selectedOption.dataset.chemical || "";
        entry.querySelector(".RiskRating").value = selectedOption.dataset.risk || "";
        entry.querySelector(".UnitofMeasure").value = selectedOption.dataset.unit || "";
    }

    // --- Auto Calculate Total ---
    function calculateTotalPrice(entry) {
        const qty = parseFloat(entry.querySelector(".Quantity")?.value) || 0;
        const unit = parseFloat(entry.querySelector(".UnitPrice")?.value) || 0;
        entry.querySelector(".TotalPrice").value = (qty * unit).toFixed(2);
    }

    // --- Setup for New Entry ---
    function initializeEntry(entry) {
        // Avoid duplicate listeners by cloning a fresh node (safe for modern browsers)
        entry.querySelectorAll("select").forEach(select => {
            select.removeEventListener("change", handleChange);
            select.addEventListener("change", handleChange);
        });

        entry.querySelector(".Quantity").addEventListener("input", () => calculateTotalPrice(entry));
        entry.querySelector(".UnitPrice").addEventListener("input", () => calculateTotalPrice(entry));
    }

    // --- Init All Existing Entries on Load ---
    wrapper.querySelectorAll(".return-entry").forEach(initializeEntry);
</script>
    </script>

}
@{
    <div class="py-4">

        <div class="d-flex justify-content-between w-100 flex-wrap">
            <div class="mb-3 mb-lg-0">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb bg-transparent p-2 mb-0">
                        <li class="breadcrumb-item d-flex align-items-center">
                            <img src="images/home.png" alt="Home" width="16" height="16" class="me-2" />
                            <a href="/Home" class="text-decoration-none">@Model.lblHome</a>
                        </li>
                        <li class="breadcrumb-item d-flex align-items-center">
                            <img src="images/inventory.png" alt="Home" width="16" height="16" class="me-2" />
                            <a href="/ManageDamaged" class="text-decoration-none">@Model.lblDamagedItems</a>
                        </li>
                        <li class="breadcrumb-item d-flex align-items-center">
                            <img src="images/inventory.png" alt="Home" width="16" height="16" class="me-2" />
                            @Model.lblDamageItem
                        </li>
                        
                    </ol>
                </nav>
                <h1 class="h4">@Model.lblDamagedItems</h1>
                <!-- <p class="mb-0">Dozens of reusable components built to provide buttons, alerts, popovers, and more.</p> -->
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-8 mb-4 m-auto">
            <div class="card border-0 shadow components-section">
                <form method="post" class="card-body">
                    <div class="row mb-4">

                        <div class="col-lg-12 col-sm-12">

                            <div id="returnEntriesWrapper">
                                <div class="return-entry border p-3 mb-3 rounded position-relative">
                                    <div class="my-4">
                                        <label for="itemGroup">Item groups</label>
                                        <select class="form-select" name="itemGroup" id="itemGroup">
                                           @if (Model.ItemGroups != null)
                                                {
                                                    <option value="">Select Item Group</option>
                                                    foreach (var item in Model.ItemGroups)
                                                    {
                                                        <option value="@item.GroupCode">@item.GroupDesc</option>
                                                    }
                                                }
                                        </select>
                                    </div>
                                    <div class="mb-4">
                                        <label for="itemCode">@Model.lblItemCode</label>
                                        <select class="form-select" name="ItemCode">
                                            <option value="1">item group1</option>
                                            <option value="2">item group2</option>
                                            <option value="3">item group3</option>
                                        </select>
                                    </div>
                                    <div class="mb-4">
                                        <label>@Model.lblItemName (@Model.lblArabicLanguage)</label> <span class="@(Model.IsMajesticUser() ? "majestic" : "text-white")">*</span>
                                        <select class="ArabicItemName form-select" id="ArabicItemName">
                                                <option value="">Select Item </option>
                                                @foreach (var item in Model.ItemCards)
                                                {
                                                    
                                                        <option value="@item.Id"
                                                            data-id="@item.ItemId"
                                                            data-group="@item.GroupCode"
                                                            data-code="@item.ItemCode"
                                                            data-description="@item.ItemDescription"
                                                            data-chemical="@item.Chemical" data-risk="@item.HazardTypeName"
                                                            data-unit="@item.UnitOfmeasure" 
                                                            >
                                                            @item.ItemName
                                                        </option>
                                                    
                                                }
                                        </select>
                                    </div>
                                       
                                    <div class="mb-4">
                                         <label for="EnglishArabicName">@Model.lblItemName (@Model.lblEnglishLanguage)</label> <span class="@(Model.IsMajesticUser() ? "majestic" : "text-white")">*</span>
                                            <select class="EnglishArabicName form-select" id="EnglishArabicName">
                                                <option value="">Select Item </option>
                                                @foreach (var item in Model.ItemCards)
                                                {
                                                    <option value="@item.Id"
                                                        data-id="@item.ItemId"
                                                        data-group="@item.GroupCode"
                                                        data-code="@item.ItemCode"
                                                        data-description="@item.ItemDescription"
                                                        data-chemical="@item.Chemical" data-risk="@item.HazardTypeName"
                                                        data-unit="@item.UnitOfmeasure" 
                                                        >
                                                        @item.ItemName
                                                    </option>
                                                    
                                                }
                                            </select>
                                    </div>
                                    <div class="mb-4">
                                        <label for="itemDescription">@Model.lblItemDescription</label>
                                        <input type="text" class="ItemDescription form-control" id="ItemDescription" readonly>
                                    </div>
                                    <div class="mb-4">
                                        <label for="typeofAsset">@Model.lblTypeofContract</label>
                                        <input type="text" class="typeofAsset form-control" id="typeofAsset" readonly>
                                    </div>
                                    <div class="mb-4">
                                        <label for="chemical">@Model.lblChemical</label>
                                        <input type="text" class="form-control" id="chemical" readonly>
                                    </div>
                                    <div class="mb-4">
                                        <label for="RiskRating">@Model.lblRiskRating</label>
                                        <input type="text" class="form-control" id="RiskRating" readonly>
                                    </div>
                                    <div class="mb-4">
                                        <label for="stateofMatter">@Model.lblStateofMatter</label>
                                        <select class="form-select" name="stateofMatter">
                                            <option value="1">item group1</option>
                                            <option value="2">item group2</option>
                                            <option value="3">item group3</option>
                                        </select>
                                    </div>
                                    <div class="mb-4">
                                        <label for="ExpiryDate">@Model.lblExpiryDate</label>
                                        <input type="date" class="form-control" name="ExpiryDate"
                                            value="@Model.CurrentDate.ToString("yyyy-MM-dd")"/>
                                    </div>
                                    <div class="mb-4">
                                        <label for="UnitofMeasure">@Model.lblUnitOfMeasure</label>
                                        <input type="text" class="form-control" id="UnitofMeasure" readonly>
                                    </div>
                                    <div class="mb-4">
                                        <label for="ReturnQuantity">@Model.lblReturned @Model.lblQuantity</label>
                                        <input type="text" name="ReturnQuantity" value="" class="form-control" id="ReturnQuantity">
                                    </div>
                                    <div class="mb-4">
                                        <label for="ReturnNotes">@Model.lblReturnNotes</label>
                                        <textarea class="form-control" id="ReturnNotes" name="ReturnNotes" rows="2"></textarea>
                                    </div>
                                    <button type="button" class="btn btn-danger btn-sm remove-entry me-3" style="position: absolute; top: 0; right: 0;">
                                        @Model.lblRemove
                                    </button>
                                </div>
                            </div>
                            <div class="mb-3">
                                <button type="button" class="btn btn-primary" id="addEntryBtn">@Model.lblAddMore</button>
                            </div

                            <div class="mb-4">
                                <label for="OrderNumber">@Model.lblOrderNumber</label>
                                <input type="text" name="OrderNumber" value="" class="form-control" id="OrderNumber">
                            </div>
                            <div class="mb-4">
                            <label for="OrderDate">@Model.lblOrderDate</label>
                                <input type="date" class="form-control" name="OrderDate"
                                    value="@Model.CurrentDate.ToString("yyyy-MM-dd")" />
                            </div>
                            <div class="mb-4">
                            <label for="RequestingSector">@Model.lblRequestingSector</label>
                                <select class="form-select" name="RequestingSector">
                                    <option value="1">item group1</option>
                                    <option value="2">item group2</option>
                                    <option value="3">item group3</option>
                                </select>
                            </div>
                            <div class="mb-4">
                            <label for="ApplicantsSector">@Model.lblApplicantsSector</label>
                                <input type="text" name="ApplicantsSector" value="" class="form-control"
                                    id="ApplicantsSector">
                            </div>
                            <div class="mb-4">
                                <label for="storeNumber">@Model.lblStoreName</label>
                                <select class="form-select" id="StoreId" name="StoreId">
                                    @if (Model.Stores != null)
                                    {
                                        foreach (var item in Model.Stores)
                                        {
                                            if (item.IsActive == 1 && item.Ended == null)
                                            {
                                                <option value="@item.StoreId">@item.StoreName</option>
                                            }
                                        }
                                    }
                                </select>

                            </div>
                            <div class="mb-4">
                            <label class="form-label d-block mb-2">@Model.lblReasonForReturn</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="ReasonForReturn" id="reason2"
                                        value="SurPlus">
                                <label class="form-check-label" for="reason2">@Model.lblSurPlus</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="ReasonForReturn" id="reason3"
                                        value="Expired">
                                <label class="form-check-label" for="reason3">@Model.lblExpired</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="ReasonForReturn" id="reason4"
                                        value="Invalid">
                                <label class="form-check-label" for="reason4">@Model.lblInvalid</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="ReasonForReturn" id="reason1"
                                        value="Damaged">
                                <label class="form-check-label" for="reason1">@Model.lblDamaged</label>
                                </div>
                            </div>
                            <div class="mb-4">
                                <div class="d-flex mb-2 mb-md-0" style="gap: 10px">
                                    <a href="ManageItems" class="btn btn-outline-gray-600  align-items-center w-100">@Model.lblCancel</a>
                                    <input type="submit" value="@Model.lblAdd" class="btn btn-sm btn-gray-800 align-items-center w-100" style="text-align:center;" />
                                </div>
                            </div>
                        </div>


                        @* <div class="col-lg-12 col-sm-12">
                            <input type="hidden" name="ItemId" value="@Model.ItemId" />
                            <div class="mb-4">
                                <label for="itemName">@Model.lblItemName</label>
                                <span>@Model.DamagedItem[0]?.ItemName</span>
                            </div>
                            <div class="mb-4">
                                <label for="damagedQuantity">@Model.lblDamagedQuantity</label>
                                <input type="text" name="DamagedQuantity" value="@Model.DamagedQuantity" class="form-control"
                                       id="damagedQuantity">
                            </div>
                            <div class="mb-4">
                                <label for="damageReason">@Model.lblDamageReason</label>
                                <input type="text" name="DamageReason" value="@Model.DamageReason" class="form-control" id="DamageReason">
                                
                            </div>
                            <div class="mb-4">


                                <div class="d-flex mb-2 mb-md-0" style="gap: 10px">

                                    <a href="ManageItems"
                                       class="btn btn-outline-gray-600  align-items-center w-100">@Model.lblCancel</a>

                                    <input type="submit" value="@Model.lblAdd"
                                           class="btn btn-sm btn-gray-800 align-items-center w-100"
                                           style="text-align:center;" />

                                </div>

                            </div>
                        </div> *@
                    </div>

                </form>
            </div>
        </div>
    </div>


    @* <div style="text-align:center; color:maroon">@Model.ErrorMsg</div> *@


}
