@page
@model LabMaterials.Pages.Rep_InventoryModel
@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

    <script>
        document.getElementById('exportExcel').addEventListener('click', function () {
            let table = document.querySelector('#exportTable'); // use hidden export table directly
            let wb = XLSX.utils.book_new();
            let ws_data = [];

            // Get headers
            const headers = Array.from(table.querySelectorAll('thead th'))
                .map(th => th.textContent.trim()); // use textContent instead of innerText
            ws_data.push(headers);

            // Get rows
            const rows = table.querySelectorAll('tbody tr');
            rows.forEach(row => {
                const rowData = [];
                const cells = row.querySelectorAll('th, td');
                cells.forEach(cell => {
                    rowData.push(cell.textContent.trim()); // use textContent
                });
                ws_data.push(rowData);
            });

            // Create worksheet and trigger download
            let ws = XLSX.utils.aoa_to_sheet(ws_data);
            XLSX.utils.book_append_sheet(wb, ws, "UserReports Data");
            XLSX.writeFile(wb, "UserReports.xlsx");
        });
        const toggleButton = document.getElementById('toggleDropdown');
        const dropdownPanel = document.getElementById('dropdownPanel');

        toggleButton.addEventListener('click', function () {
            dropdownPanel.style.display = (dropdownPanel.style.display === 'none' || dropdownPanel.style.display === '') ? 'block' : 'none';
        });

        // Optional: hide when click outside
        document.addEventListener('click', function (e) {
            if (!toggleButton.contains(e.target) && !dropdownPanel.contains(e.target)) {
                dropdownPanel.style.display = 'none';
            }
        });
    </script>

}
@{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb bg-transparent p-2 mb-0">
            <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/home.png" alt="Home" width="16" height="16" class="me-2" />
                        <a href="/Home" class="text-decoration-none">@Model.lblHome</a>
                    </li>
            <li class="breadcrumb-item d-flex align-items-center">
                <img src="images/pen.png" alt="Home" width="16" height="16" class="me-2" />
                <a href="/Rep_MaterialsReceived" class="text-decoration-none">@Model.lblReports</a>
            </li>
            <li class="breadcrumb-item d-flex align-items-center">
                <img src="images/management.png" alt="Home" width="16" height="16" class="me-2" />
                @Model.lblInventory
            </li>
        </ol>
    </nav>

    <div class="py-4 border-bottom mb-2">
        <div class="d-block mb-4 mb-md-0">

            <h2 class="h4">@Model.lblReports</h2>
            <!-- <p class="mb-0">Your web analytics dashboard template.</p>-->
        </div>
        <div class="d-flex  flex-direcion-column flex-wrap flex-md-nowrap align-items-center btn-toolbar mb-2 mb-md-0">
            <a href="Rep_MaterialsReceived"
               class="btn btn-outline-gray-600 d-inline-flex align-items-center  report mx-2">@Model.lblMaterialsReceived</a>

            <a href="Rep_Distribution" class="btn btn-outline-gray-600 d-inline-flex align-items-center  report mx-2">@Model.lblDistributedMaterials</a>
            <a href="Rep_Inventory" class="btn btn-gray-600 d-inline-flex align-items-center  report mx-2">@Model.lblInventory</a>
            <a href="Rep_HazardMaterial"
                class="btn btn-outline-gray-600 d-inline-flex align-items-center  report mx-2">@Model.lblHazardousMaterials</a>
            <a href="Rep_DamagedItems" class="btn btn-outline-gray-600 d-inline-flex  align-items-center report mx-2">@Model.lblDamagedItems</a>
            <a href="Rep_Item" class="btn btn-outline-gray-600 d-inline-flex  align-items-center report mx-2">@Model.lblItems</a>
            <a href="Rep_ItemCards"
                class="btn btn-outline-gray-600 d-inline-flex  align-items-center report mx-2">@Model.lblItemCards</a>
            @* <a href="Rep_ItemMovement"
                class="btn btn-outline-gray-600 d-inline-flex  align-items-center report mx-2">@Model.lblItemMovement</a> *@
            @if (Model.CanManageUsers)
            {
                <a href="Rep_UserActivity"
                    class="btn btn-outline-gray-600 d-inline-flex  align-items-center report mx-2">@Model.lblUserActivity</a>



                <a href="Rep_UserReport"
                   class="btn btn-outline-gray-600 d-inline-flex  align-items-center report mx-2">@Model.lblUserReport</a>
            }

        </div>
    </div>
    <div class="row align-item-center">
        <div class="col-3 col-md-3 col-xl-3">
            <button id="exportExcel" class="btn btn-success">@Model.lblExport</button>
            <button id="printBtn" class="btn btn-primary">@Model.lblPrint</button>
        </div>
    </div>

    <div class="table-settings mt-4 mb-4">
        <form method="post" asp-page-handler="Action" class="row align-items-center">

            <div class="row">
                <div class="col-lg-3">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            <svg class="icon icon-xs" x-description="Heroicon name: solid/search"
                                    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd"
                                        d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                        clip-rule="evenodd"></path>
                            </svg>
                        </span>
                        <input type="text" name="StoreNumber" class="form-control" placeholder="@Model.lblStoreNumber" value="@Model.StoreNumber">
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            <svg class="icon icon-xs" x-description="Heroicon name: solid/search"
                                    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd"
                                        d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                        clip-rule="evenodd"></path>
                            </svg>
                        </span>
                        <input type="text" name="StoreName" class="form-control" placeholder="@Model.lblStoreName" value="@Model.StoreName">
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            <svg class="icon icon-xs" x-description="Heroicon name: solid/search"
                                    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd"
                                        d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                        clip-rule="evenodd"></path>
                            </svg>
                        </span>
                        <input type="text" name="Item" class="form-control" placeholder="@Model.lblItemName" value="@Model.Item">
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            @Model.lblFromDate
                        </span>

                        <input asp-for="FromDate" class="form-control" type="date" name="FromDate"
                                value="@Model.FromDate?.ToString("yyyy-MM-dd")" />
                    </div>
                </div>

            </div>


            <div class="row">
                <div class="col-lg-3 mt-3">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            @Model.lblToDate
                        </span>

                        <input asp-for="ToDate" type="date" class="form-control" name="ToDate"
                                value="@Model.ToDate?.ToString("yyyy-MM-dd")" />
                    </div>
                </div>
                <div class="col-4 col-md-2 col-xl-1 ps-md-0 mt-3 mx-3">
                    <button type="submit" name="action" value="search" class="btn btn-primary">@Model.lblSearch</button>
                </div>
                <div class="col text-end mt-3">
                    <button type="button" id="toggleDropdown" class="btn btn-secondary">
                        @Model.lblShowHideColumn
                    </button>

                    <!-- DROPDOWN PANEL GOES HERE -->
                    <div id="dropdownPanel" class="card p-2 shadow-sm position-absolute"
                        style="right: 10px; top: 41%; display: none; width: 200px; z-index: 1000;">

                        <!-- Your checkboxes here -->
                        <div class="form-check mb-1">
                            <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="itemName"
                                id="itemName" @(Model.SelectedColumns.Contains("itemName") ? "checked" : "")>
                            <label class="form-check-label" for="itemName">ItemName</label>
                        </div>
                        <div class="form-check mb-1">
                            <input class="form-check-input column-checkbox" name="columns" type="checkbox" value="warehouseNumber"
                                id="warehouseNumber" @(Model.SelectedColumns.Contains("warehouseNumber") ? "checked" : "")>
                            <label class="form-check-label" for="warehouseNumber">WarehouseNumber</label>
                        </div>
                        <div class="form-check mb-1">
                            <input class="form-check-input column-checkbox" name="columns" type="checkbox"
                                value="warehouseName" id="warehouseName" @(Model.SelectedColumns.Contains("warehouseName") ? "checked" : "")>
                            <label class="form-check-label" for="warehouseName">WarehouseName</label>
                        </div>
                        @* <div class="form-check mb-1">
                            <input class="form-check-input column-checkbox" name="columns" type="checkbox"
                                value="shalveNumber" id="shalveNumber" @(Model.SelectedColumns.Contains("shalveNumber") ? "checked" : "")>
                            <label class="form-check-label" for="shalveNumber">ShalveNumber</label>
                        </div> *@
                        <div class="form-check mb-1">
                            <input class="form-check-input column-checkbox" name="columns" type="checkbox"
                                value="AvailableQuantity" id="AvailableQuantity" @(Model.SelectedColumns.Contains("AvailableQuantity") ? "checked" : "")>
                            <label class="form-check-label" for="AvailableQuantity">AvailableQuantity</label>
                        </div>
                        <div class="form-check mb-1">
                            <input class="form-check-input column-checkbox" name="columns" type="checkbox"
                                value="expiry" id="expiry" @(Model.SelectedColumns.Contains("expiry") ? "checked" : "")>
                            <label class="form-check-label" for="expiry">ExpiryDate</label>
                        </div>
                        <div class="form-check mb-1 text-center">
                            <button type="submit" name="action" value="updateColumns"
                                class="btn btn-success btn-sm">Ok</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>


    <h5>@Model.lblInventory</h5>
    @* <div class="d-flex justify-content-between mb-3 align-items-center">
        <div>@Model.lblTotalItem : @Model.TotalItems</div>

            <form method="post">
                <button type="submit" asp-page-handler="Export" class="btn btn-primary d-flex top-sm-btn justify-content-center"><img b-ie9pk9zf1q="" class="icon text-white icon-xs me-2" src="images/export.png">@Model.lblExport</button>
            </form>
    </div> *@
    <div class="d-flex justify-content-between align-items-center">
        <div>@Model.lblTotalItem : @Model.TotalItems</div>
        <div>
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Page navigation" style="direction: ltr;">
                    <ul class="pagination">

                        @* Previous button *@
                        @if (Model.CurrentPage > 1)
                        {
                        
                            <li class="page-item">
                                <a class="page-link" href="?page=@(Model.CurrentPage - 1)&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">&laquo;</a>
                            </li>
                        }

                        @* Show pages normally if the total pages are less than or equal to 10 *@
                        @if (Model.TotalPages <= 10)
                        {
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="?page=@i&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">@i</a>
                                </li>
                            }
                        }
                        else
                        {
                            @* Show the first page, then ellipsis if there are skipped pages *@
                            @if (Model.CurrentPage > 3)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="?page=1&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">1</a>
                                </li>
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }

                            @* Show pages from (current-1) to (current+1) *@
                            @for (int i = Math.Max(1, Model.CurrentPage - 1); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 1); i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="?page=@i&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">@i</a>
                                </li>
                            }

                            @* Add "..." if there are skipped pages after the current page *@
                            @if (Model.CurrentPage < Model.TotalPages - 1)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }

                            @* Show the last page, if it's not already visible *@
                            @if (Model.CurrentPage < Model.TotalPages - 2)
                            {   
                                <li class="page-item">
                                    <a class="page-link" href="?page=@Model.TotalPages&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">@Model.TotalPages</a>
                                </li>
                            }
                        }

                        @* Last buttons *@
                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(Model.CurrentPage + 1)&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">&raquo;</a>
                            </li>
                        
                        }

                    </ul>
                </nav>
            }
        </div>
    </div>
    <div class="card border-0 shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-centered table-nowrap mb-0 rounded">
                    <thead class="thead-light">
                        <tr>

                            @if (Model.SelectedColumns.Contains("itemName"))
                            {
                            <th scope="col" class="border-0 rounded-start">@Model.lblItemName</th>
                            }
                            @if (Model.SelectedColumns.Contains("warehouseNumber"))
                            {
                            <th scope="col" class="border-0">@Model.lblStoreNumber</th>
                            }
                            @if (Model.SelectedColumns.Contains("warehouseName"))
                            {
                            <th scope="col" class="border-0">@Model.lblStoreName</th>
                            }
                            @* @if (Model.SelectedColumns.Contains("shalveNumber"))
                            {
                            <th scope="col" class="border-0">@Model.lblShelveNumber</th>
                            } *@
                            @if (Model.SelectedColumns.Contains("AvailableQuantity"))
                            {
                            <th scope="col" class="border-0 rounded-end">@Model.lblAvailableQuantity</th>
                            }
                            @if (Model.SelectedColumns.Contains("expiry"))
                            {
                            <th scope="col" class="border-0 rounded-end">@Model.lblExpiryDate</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Storages != null)
                        {
                            foreach (var item in Model.Storages)
                            {
                                <tr>
                                    @if (Model.SelectedColumns.Contains("itemName"))
                                    {
                                    <th scope="row">@item.ItemName</th>
                                    }
                                    @if (Model.SelectedColumns.Contains("warehouseNumber"))
                                    {
                                    <td>@item.StoreNumber</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("warehouseName"))
                                    {
                                    <td>@item.StoreName</td>
                                    }
                                    @* @if (Model.SelectedColumns.Contains("shalveNumber"))
                                    {
                                    <td>@item.ShelfNumber</td>
                                    } *@
                                    @if (Model.SelectedColumns.Contains("AvailableQuantity"))
                                    {
                                    <td>@item.AvailableQuantity</td>
                                    }
                                    @if (Model.SelectedColumns.Contains("expiry"))
                                    {
                                    <td>@(item.ExpiryDate.HasValue ? item.ExpiryDate.Value.ToString("dd-MM-yyyy") : "")</td>
                                    }
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation" style="direction: ltr;">
            <ul class="pagination">

                @* Previous button *@
                @if (Model.CurrentPage > 1)
                {
                   
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.CurrentPage - 1)&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">&laquo;</a>
                    </li>
                }

                @* Show pages normally if the total pages are less than or equal to 10 *@
                @if (Model.TotalPages <= 10)
                {
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">@i</a>
                        </li>
                    }
                }
                else
                {
                    @* Show the first page, then ellipsis if there are skipped pages *@
                    @if (Model.CurrentPage > 3)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=1&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">1</a>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @* Show pages from (current-1) to (current+1) *@
                    @for (int i = Math.Max(1, Model.CurrentPage - 1); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 1); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">@i</a>
                        </li>
                    }

                    @* Add "..." if there are skipped pages after the current page *@
                    @if (Model.CurrentPage < Model.TotalPages - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @* Show the last page, if it's not already visible *@
                    @if (Model.CurrentPage < Model.TotalPages - 2)
                    {   
                        <li class="page-item">
                            <a class="page-link" href="?page=@Model.TotalPages&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">@Model.TotalPages</a>
                        </li>
                    }
                }

                @* Last buttons *@
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.CurrentPage + 1)&Item=@Model.Item&StoreNumber=@Model.StoreNumber&StoreName=@Model.StoreName&FromDate=@Model.FromDate&ToDate=@Model.ToDate">&raquo;</a>
                    </li>
                   
                }

            </ul>
        </nav>
    }

    <div class="table-responsive" id="exportTableContainer" style="display: none;">
        <table class="table table-centered table-nowrap mb-0 rounded" id="exportTable">
            <thead class="thead-light">
                <tr>

                    @if (Model.SelectedColumns.Contains("itemName"))
                    {
                        <th scope="col" class="border-0 rounded-start">@Model.lblItemName</th>
                    }
                    @if (Model.SelectedColumns.Contains("warehouseNumber"))
                    {
                        <th scope="col" class="border-0">@Model.lblStoreNumber</th>
                    }
                    @if (Model.SelectedColumns.Contains("warehouseName"))
                    {
                        <th scope="col" class="border-0">@Model.lblStoreName</th>
                    }
                    @* @if (Model.SelectedColumns.Contains("shalveNumber"))
                    {
                        <th scope="col" class="border-0">@Model.lblShelveNumber</th>
                    } *@
                    @if (Model.SelectedColumns.Contains("AvailableQuantity"))
                    {
                        <th scope="col" class="border-0 rounded-end">@Model.lblAvailableQuantity</th>
                    }
                    @if (Model.SelectedColumns.Contains("expiry"))
                    {
                        <th scope="col" class="border-0 rounded-end">@Model.lblExpiryDate</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model.StoragesAll != null)
                {
                    foreach (var item in Model.StoragesAll)
                    {
                        <tr>
                            @if (Model.SelectedColumns.Contains("itemName"))
                            {
                                <th scope="row">@item.ItemName</th>
                            }
                            @if (Model.SelectedColumns.Contains("warehouseNumber"))
                            {
                                <td>@item.StoreNumber</td>
                            }
                            @if (Model.SelectedColumns.Contains("warehouseName"))
                            {
                                <td>@item.StoreName</td>
                            }
                            @* @if (Model.SelectedColumns.Contains("shalveNumber"))
                            {
                                <td>@item.ShelfNumber</td>
                            } *@
                            @if (Model.SelectedColumns.Contains("AvailableQuantity"))
                            {
                                <td>@item.AvailableQuantity</td>
                            }
                            @if (Model.SelectedColumns.Contains("expiry"))
                            {
                                <td>@(item.ExpiryDate.HasValue ? item.ExpiryDate.Value.ToString("dd-MM-yyyy") : "")</td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}
