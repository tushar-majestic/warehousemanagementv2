@page "/ReturnRequestsDetails/{id:int}"
@model LabMaterials.Pages.ReturnRequestsDetailsModel
@{
    ViewData["Title"] = "Return Request Details";
}
<style>
 .table-format {
     width: 80%;
     margin: 0 auto;
     border-collapse: collapse;
     font-family: Arial, sans-serif;
 }

 .table-format th,
 .table-format td {
     border: 1px solid #000;
     padding: 5px;
     font-size: 22px;
     vertical-align: top;
 }

 .nested-table {
     width: 100%;
     border-collapse: collapse;
 }

 .nested-table td {
     border: none;
     padding: 5px;
     font-size: 22px;
 }

 .text-approve {
    margin-top: 5px;
    height: 20%;
 }
 .d-flex{
    display: flex;
 }
 .text-size{
    font-size: 16px
 }
</style>

<div class="py-4">

    <div class="d-flex justify-content-between w-100 flex-wrap">
        <div class="mb-3 mb-lg-0">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-transparent p-2 mb-0">
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="/images/home.png" alt="Home" width="16" height="16" class="me-2" />
                        <a href="/Home" class="text-decoration-none">@Model.lblHome</a>
                    </li>
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="/images/inventory.png" alt="Home" width="16" height="16" class="me-2" />
                            <a href="/ViewReturnRequests" class="text-decoration-none">@Model.lblDamagedItems</a>
                    </li>
                    <li class="breadcrumb-item d-flex align-items-center">
                        <img src="/images/inventory.png" alt="Home" width="16" height="16" class="me-2" />
                        @ViewData["Title"] 
                    </li>
                </ol>
            </nav>
              <h1 class="h4">@ViewData["Title"] </h1>
            
        </div>
    </div>
</div>

<div>


    @if (Model.ReturnRequest != null)
    {
       
    <div class="card mb-4 border shadow-sm">
     <div class="card-header bg-primary text-white d-flex justify-content-end align-items-center">
                <div class="d-flex gap-4">
                    <button id="PrintReport" class="btn btn-primary">Print</button>
                </div>
            </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-4">Order Number</dt>
            <dd class="col-sm-8">@Model.ReturnRequest.OrderNumber</dd>

            <dt class="col-sm-4">Order Date</dt>
            <dd class="col-sm-8">@Model.ReturnRequest.OrderDate.ToString("yyyy-MM-dd")</dd>

            <dt class="col-sm-4">Created At</dt>
            <dd class="col-sm-8">@Model.ReturnRequest.CreatedAt.ToString("yyyy-MM-dd HH:mm")</dd>

            <dt class="col-sm-4">From Sector</dt>
            <dd class="col-sm-8">@Model.ReturnRequest.FromSector</dd>

            <dt class="col-sm-4">To Sector</dt>
            <dd class="col-sm-8">@Model.ReturnRequest.ToSector</dd>

            <dt class="col-sm-4">Warehouse ID</dt>
            <dd class="col-sm-8">@Model.ReturnRequest.Warehouse</dd>

            <dt class="col-sm-4">Return Reasons</dt>
            <dd class="col-sm-8">
                @if (Model.ReturnRequest.IsSurplus) { <span class="badge bg-info me-1">Surplus</span> }
                @if (Model.ReturnRequest.IsExpired) { <span class="badge bg-warning text-dark me-1">Expired</span> }
                @if (Model.ReturnRequest.IsInvalid) { <span class="badge bg-secondary me-1">Invalid</span> }
                @if (Model.ReturnRequest.IsDamaged) { <span class="badge bg-danger me-1">Damaged</span> }
                @if (!Model.ReturnRequest.IsSurplus && !Model.ReturnRequest.IsExpired && !Model.ReturnRequest.IsInvalid && !Model.ReturnRequest.IsDamaged)
                {
                    <span class="text-muted">None</span>
                }
            </dd>

            @if (!string.IsNullOrEmpty(Model.ReturnRequest.Reason))
            {
                <dt class="col-sm-4">Additional Notes</dt>
                <dd class="col-sm-8">@Model.ReturnRequest.Reason</dd>
            }
        </dl>
    


        <h4 class="mt-4">Returned Items</h4>

        @if (Model.ReturnRequestItems.Any())
        {
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Item Name (EN)</th>
                        <th>Code</th>
                        <th>Desc</th>
                        <th>Qty</th>
                        <th>Expiry</th>
                        @if(Model.ReturnRequest.InspOffApprovalDate != null){
                            <th >Recommended Action</th>
                        }
                        @if(Model.ReturnRequest.InspOffApprovalDate != null){
                            <th >Committee Notes</th>
                        }
                    </tr>
                </thead>
                <tbody id="itemsTableBody">
                    @foreach (var item in Model.ReturnRequestItems)
                    {
                        <tr>
                            <td>@item.ItemNameEnglish</td>
                            <td>@item.ItemCode</td>
                            <td>@(item.ItemDescription ?? "")</td>
                            <td>@item.ReturnedQuantity</td>
                            <td>@item.ExpiryDate?.ToString("yyyy-MM-dd")</td>
                            <td>@item.RecommendedAction</td>
                            <td>@item.Notes</td>
                        </tr>
                    }
                </tbody>
            </table>
        
        }
        else
        {
            <p>No items in this return request.</p>
        }
         </div>
    </div>
    }
     
    else
    {
        <div class="alert alert-danger">Return request not found.</div>
    }
   

    <a href="/ViewReturnRequests" class="btn btn-secondary mt-3">Back to List</a>
</div>

<div class="table-size"  id="printArea" style="display: none;" dir="@Model.dir">

    <div align="center" class="header-title">
        @ViewData["Title"]
    </div>
    @{
        var rep = Model.ReturnRequest;
    }
    @if(rep != null){
    <div class="layout-row d-flex align-items-start text-size"
     style="display: flex; font-size: 16px; width: 100%; justify-content: space-between; font-size: 13px;">
    
 
        <div class="left-column" style="width: 57%">
            <div>Order Number: @rep.OrderNumber</div>
            <div>Order Date: @rep.OrderDate.ToString("yyyy-MM-dd")</div>
            <div>@Model.lblPageCount: <span id="pageCountSpan">Calculating...</span></div>
        </div>

     
        <div class="center-column" style="width: 57%">
            <table class="table-1 w-100">
                <tr style="text-align: center;">
                    <td colspan="2" style="font-weight: 600;">Reason For Return</td>
                </tr>
                <tr>
                    <td colspan="2">
                        @if (rep.IsSurplus) { <span class="badge bg-info me-1">Surplus</span> }
                        @if (rep.IsExpired) { <span class="badge bg-warning text-dark me-1">Expired</span> }
                        @if (rep.IsInvalid) { <span class="badge bg-secondary me-1">Invalid</span> }
                        @if (rep.IsDamaged) { <span class="badge bg-danger me-1">Damaged</span> }
                        @if (!rep.IsSurplus && !rep.IsExpired && !rep.IsInvalid && !rep.IsDamaged)
                        {
                            <span class="text-muted">None</span>
                        }
                    </td>
                </tr>
                @if (!string.IsNullOrEmpty(rep.Reason))
                {
                    <tr>
                        <td style="font-weight: 500;">Additional Notes</td>
                        <td>@rep.Reason</td>
                    </tr>
                }
            </table>
        </div>

        <div class="right-column" style="display: flex; flex-direction: column; align-item: end; text-align: end">
            <div>Name of the applicant's sector : @rep.FromSector</div>
            <div>Sector to which the request is sent : @rep.ToSector</div>
            <div>Warehouse: @rep.Warehouse</div>
        </div>

    </div>

        <table class="table-format" border="1" align="center" style="width: 100%; border-collapse: collapse; text-align: center;">
            <thead>
                <tr>
                    <th style="width: 5%;">Count</th>
                    <th colspan="4" style="width: 25%;">Inspection Committee Recommendations</th>
                    <th style="width: 5%;">Returned Quantity</th>
                    <th style="width: 5%;">Unit Of Measure</th>
                    <th style="width: 15%;">Item Name</th>
                    <th style="width: 7%;">Item No</th>
                    <th style="width: 7%;">Item Description</th>
                   
                </tr>
            </thead>
            <tbody>
                @if (Model.ReturnRequestItems != null && Model.ReturnRequestItems.Any())
                {
                    foreach (var item in Model.ReturnRequestItems)
                    {
                        <tr>
                            <td style="font-size: 14px;" colspan="4"></td>
                            <td style="font-size: 14px;">@item.ItemCode</td>
                            <td style="font-size: 14px;">@item.ItemNameEnglish</td>
                            <td style="font-size: 14px;">@item.ReturnedQuantity</td>
                            <td style="font-size: 14px;">@item.UnitOfMeasure</td>
                            <td style="font-size: 14px;">@item.ItemDescription</td>
                            <td style="font-size: 14px;"></td>
                        </tr>
                        <tr>
                            <td rowspan="2" colspan="2" style="text-align: center;font-size: 14px;"></td>
                            <td colspan="2.5"></td>
                            <td colspan="5"></td>
                            <td style=" text-align: center;font-size: 14px;">@Model.lblName<br>@Model.lblSignature<br>@Model.lblDate</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="10">No items to display.</td>
                    </tr>
                }
            </tbody>
        </table>

    }    

</div>


@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
              
                const printReportBtn = document.getElementById('PrintReport');
             
                if (printReportBtn) {
                    printReportBtn.addEventListener('click', function () {
                        console.log("PrintReport button clicked");

                        const printContentElement = document.getElementById('printArea');
                        if (!printContentElement) {
                            console.error("printArea not found");
                            return;
                        }

                        const printContent = printContentElement.innerHTML;
                        const printWindow = window.open('', '', 'width=800,height=600');
                        printWindow.document.write('<html><head><title>Receiving Report</title>');
                        printWindow.document.write('<style>body{font-family: Arial;} table{width:100%;border-collapse:collapse;} th, td{border:1px solid #ddd;padding:8px;} th{background:#f2f2f2;} .text-center{text-align:center;}</style>');
                        printWindow.document.write('</head><body>');

                        printWindow.document.write(printContent);
                        printWindow.document.write('</body></html>');
                         printWindow.document.close();

                        printWindow.onload = function () {
                            const pageHeight = 1122; // Height in px for A4 at 96dpi approx
                             console.log('Page Height:', pageHeight);
                            const body = printWindow.document.body;
                            const totalHeight = body.scrollHeight;

                            const pageCount = Math.ceil(totalHeight / pageHeight);

                            console.log('Page Height:', pageHeight);
                            console.log('Total Height:', totalHeight);
                            console.log('Page Count:', pageCount);

                              const pageCountSpan = printWindow.document.getElementById("pageCountSpan");
                                if (pageCountSpan) {
                                    pageCountSpan.innerText = pageCount;
                                }

                                // Optional: show page count in original document too
                                const originalPageCountLabel = document.getElementById('lblPageCount');
                                if (originalPageCountLabel) {
                                    originalPageCountLabel.innerText = `Page Count: ${pageCount}`;
                                }

                            // Then print
                            printWindow.focus();
                            printWindow.print();
                        };
                    });
                } else {
                    console.warn("PrintReport button not found");
                }
            });

    </script>
}
