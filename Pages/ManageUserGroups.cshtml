@page
@model LabMaterials.Pages.ManageUserGroupsModel
@section Scripts
{
    <script type="text/javascript" language="javascript">
        const notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            types: [
                {
                    type: 'error',
                    background: '#e3392c',
                    icon: {
                        className: 'fas fa-times',
                        tagName: 'span',
                        color: '#000000'
                    },
                    dismissible: true,
                    duration: 0,
                    ripple: true
                }
            ]
        });

        function showErrorNotification(message) {
            notyf.open({
                type: 'error',
                message: message
            });
        }

        @if (!string.IsNullOrEmpty(Model.Message))
        {
            <text>
                    var errorMessageFromServer = @Html.Raw(Json.Serialize(Model.Message));
                    showErrorNotification(errorMessageFromServer);
            </text>
        }
    </script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script>
        document.getElementById('exportExcel').addEventListener('click', function () {
            let table = document.querySelector('#exportTable'); // use hidden export table directly
            let wb = XLSX.utils.book_new();
            let ws_data = [];

            // Get headers
            const headers = Array.from(table.querySelectorAll('thead th'))
                .map(th => th.textContent.trim()); // use textContent instead of innerText
            ws_data.push(headers);

            // Get rows
            const rows = table.querySelectorAll('tbody tr');
            rows.forEach(row => {
                const rowData = [];
                const cells = row.querySelectorAll('th, td');
                cells.forEach(cell => {
                    rowData.push(cell.textContent.trim()); // use textContent
                });
                ws_data.push(rowData);
            });

            // Create worksheet and trigger download
            let ws = XLSX.utils.aoa_to_sheet(ws_data);
            XLSX.utils.book_append_sheet(wb, ws, "Manage User Groups Data");
            XLSX.writeFile(wb, "ManageUserGroups.xlsx");
        });
    </script>
}
@{

    

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4 pb-2">
        <div class="d-block mb-4 mb-md-0">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-transparent p-2 mb-0">
                <li class="breadcrumb-item d-flex align-items-center">
                        <img src="images/home.png" alt="Home" width="16" height="16" class="me-2" />
                        <a href="/Home" class="text-decoration-none">@Model.lblHome</a>
                    </li>
                <li class="breadcrumb-item d-flex align-items-center">
                    <img src="images/management.png" alt="Home" width="16" height="16" class="me-2" />
                    <a href="/ManageUsers" class="text-decoration-none">@Model.lblUsers</a>
                </li>
                <li class="breadcrumb-item d-flex align-items-center">
                    <img src="images/management.png" alt="Home" width="16" height="16" class="me-2" />
                    @Model.lblUserGroup
                </li>
            </ol>
        </nav>
            <h2 class="h4">@Model.lblUserGroup</h2>
            <!-- <p class="mb-0">Your web analytics dashboard template.</p>-->
        </div>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group ms-2 ms-lg-3">
                <a href="AddUserGroup" class="btn btn-sm justify-content-center top-big-btn btn-gray-800 d-inline-flex align-items-center">

                <img b-ie9pk9zf1q="" class="icon text-white icon-xs mx-2" src="images/plus.png">
                    @Model.lblAddUserGroup
                </a>
            </div>
        </div>
    </div>
    <div class="mb-4">
        <button id="exportExcel" class="btn btn-success">@Model.lblExportExcel</button>
        <button id="printBtn" class="btn btn-primary">@Model.lblPrintTable</button>
    </div>
    <div class="table-settings mb-4">
        <form method="post" asp-page-handler="Search" class="row align-items-center">

            <div class="col col-md-6 col-lg-3 col-xl-3">
                <div class="input-group me-2 me-lg-3 fmxw-400">
                    <span class="input-group-text">
                        <svg class="icon icon-xs" x-description="Heroicon name: solid/search"
                            xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd"
                                d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </span>

                    <input type="text" name="UserGroupName" class="form-control" placeholder="@Model.lblUserGroupName" value="@Model.UserGroupName">
                </div>
            </div>
            <div class="col-4 col-md-2 col-xl-1 ps-md-0 text-end">
                <button type="submit" class="btn btn-primary">@Model.lblSearch</button>
            </div>
        </form>
    </div>



    @* <div style="color:maroon; text-align:center">@Model.Message</div> *@


    <div>@Model.lblTotalItem : @Model.TotalItems</div>

    <div class="card border-0 shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-centered table-nowrap mb-0 rounded">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col" class="border-0 rounded-start">@Model.lblUserGroupName</th>
                            <th scope="col" class="border-0">@Model.lblPrivilages</th>
                            <th scope="col" class="border-0 rounded-end"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.UserGroups != null)
                        {
                            foreach (var item in Model.UserGroups)
                            {
                                <tr>
                                    <td>@item.UserGroupName</td>
                                    <td>@item.Privilages</td>
                                    <td>
                                        <form method="post">
                                            <input type="hidden" value="@item.UserGroupID" name="UserGroupID" />
                                            <input type="hidden" value="@Model.CurrentPage" name="page" />
                                            <input type="hidden" value="@Model.UserGroupName" name="UserGroupName" />
                                            <input type="submit" value="@Model.lblEdit" class="btn btn-secondary"
                                                asp-page-handler="Edit" />
                                            <input type="submit" value="@Model.lblDelete" class="btn btn-danger"
                                                asp-page-handler="Delete" />
                                        </form>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

     @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation" style="direction: ltr;">
            <ul class="pagination">

                @* Previous button *@
                @if (Model.CurrentPage > 1)
                {
                   
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.CurrentPage - 1)&UserGroupName=@Model.UserGroupName">&laquo;</a>
                    </li>
                }

                @* Show pages normally if the total pages are less than or equal to 10 *@
                @if (Model.TotalPages <= 10)
                {
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i&UserGroupName=@Model.UserGroupName">@i</a>
                        </li>
                    }
                }
                else
                {
                    @* Show the first page, then ellipsis if there are skipped pages *@
                    @if (Model.CurrentPage > 3)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=1&UserGroupName=@Model.UserGroupName">1</a>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @* Show pages from (current-1) to (current+1) *@
                    @for (int i = Math.Max(1, Model.CurrentPage - 1); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 1); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i&UserGroupName=@Model.UserGroupName">@i</a>
                        </li>
                    }

                    @* Add "..." if there are skipped pages after the current page *@
                    @if (Model.CurrentPage < Model.TotalPages - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @* Show the last page, if it's not already visible *@
                    @if (Model.CurrentPage < Model.TotalPages - 2)
                    {   
                        <li class="page-item">
                            <a class="page-link" href="?page=@Model.TotalPages&UserGroupName=@Model.UserGroupName">@Model.TotalPages</a>
                        </li>
                    }
                }

                @* Last buttons *@
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.CurrentPage + 1)&UserGroupName=@Model.UserGroupName">&raquo;</a>
                    </li>
                   
                }

            </ul>
        </nav>
    }
    <div class="table-responsive" id="exportTableContainer" style="display: none;">
        <table class="table table-centered table-nowrap mb-0 rounded" id="exportTable">
            <thead class="thead-light">
                <tr>
                    <th>@Model.lblUserGroupName</th>
                     <th>@Model.lblPrivilages</th>
                </tr>  
            </thead>
            <tbody>
                @if (Model.UserGroupsAll != null)
                {
                    foreach (var item in Model.UserGroupsAll)
                    {
                        <tr>
                            <td>@item.UserGroupName</td>
                            <td>@item.Privilages</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}
